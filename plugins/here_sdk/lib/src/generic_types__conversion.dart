import 'package:here_sdk/src/sdk/core/geo_box.dart';
import 'package:here_sdk/src/sdk/core/geo_coordinates.dart';
import 'dart:ffi';
import 'package:here_sdk/src/_library_context.dart' as __lib;
import 'package:here_sdk/src/builtin_types__conversion.dart';
import 'package:here_sdk/src/sdk/animation/anchor2_d_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/geo_coordinates_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/geo_orientation_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/point2_d_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/scalar_keyframe.dart';
import 'package:here_sdk/src/sdk/core/point2_d.dart';
import 'package:here_sdk/src/sdk/mapview/datasource/data_attribute_value.dart';
import 'package:here_sdk/src/sdk/mapview/datasource/line_data.dart';
import 'package:here_sdk/src/sdk/mapview/datasource/point_data.dart';
import 'package:here_sdk/src/sdk/mapview/datasource/polygon_data.dart';
import 'package:here_sdk/src/sdk/mapview/map_camera_keyframe_track.dart';
import 'package:here_sdk/src/sdk/mapview/map_camera_update.dart';
import 'package:here_sdk/src/sdk/mapview/map_content_category.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker3_d.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker_cluster.dart';
import 'package:here_sdk/src/sdk/mapview/map_measure.dart';
import 'package:here_sdk/src/sdk/mapview/map_measure_range.dart';
import 'package:here_sdk/src/sdk/mapview/map_polygon.dart';
import 'package:here_sdk/src/sdk/mapview/map_polyline.dart';
import 'package:here_sdk/src/sdk/mapview/map_scene.dart';
import 'package:here_sdk/src/sdk/mapview/visibility_state.dart';
import 'package:here_sdk/src/sdk/core/engine/catalog_configuration.dart';
import 'package:here_sdk/src/sdk/core/engine/engine_base_u_r_l.dart';
import 'package:here_sdk/src/sdk/core/engine/engine_options.dart';
import 'package:here_sdk/src/sdk/core/engine/layer_configuration.dart';
import 'package:here_sdk/src/sdk/core/engine/pass_through_feature.dart';
import 'package:here_sdk/src/sdk/core/engine/usage_stats.dart';
import 'package:here_sdk/src/sdk/core/localized_text.dart';
import 'package:here_sdk/src/sdk/core/network_endpoint.dart';
import 'package:here_sdk/src/sdk/routing/localized_road_number.dart';
import 'package:here_sdk/src/sdk/transport/hazardous_material.dart';
import 'package:intl/locale.dart';
import 'package:here_sdk/src/sdk/core/picked_place.dart';
import 'package:here_sdk/src/sdk/mapview/map_object_descriptor.dart';
import 'package:here_sdk/src/sdk/mapview/pick_map_content_result.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_incident_type.dart';
import 'package:here_sdk/src/sdk/core/country_code.dart';
import 'package:here_sdk/src/sdk/core/geo_corridor.dart';
import 'package:here_sdk/src/sdk/core/geo_polygon.dart';
import 'package:here_sdk/src/sdk/core/location.dart';
import 'package:here_sdk/src/sdk/core/name_i_d.dart';
import 'package:here_sdk/src/sdk/routing/access_attributes.dart';
import 'package:here_sdk/src/sdk/routing/attribution.dart';
import 'package:here_sdk/src/sdk/routing/avoid_bounding_box_area_options.dart';
import 'package:here_sdk/src/sdk/routing/avoid_corridor_area_options.dart';
import 'package:here_sdk/src/sdk/routing/avoid_polygon_area_options.dart';
import 'package:here_sdk/src/sdk/routing/charging_connector_type.dart';
import 'package:here_sdk/src/sdk/routing/fare.dart';
import 'package:here_sdk/src/sdk/routing/isoline.dart';
import 'package:here_sdk/src/sdk/routing/maneuver.dart';
import 'package:here_sdk/src/sdk/routing/max_speed_on_segment.dart';
import 'package:here_sdk/src/sdk/routing/pass_through_waypoint.dart';
import 'package:here_sdk/src/sdk/routing/payment_method.dart';
import 'package:here_sdk/src/sdk/routing/post_action.dart';
import 'package:here_sdk/src/sdk/routing/pre_action.dart';
import 'package:here_sdk/src/sdk/routing/road_features.dart';
import 'package:here_sdk/src/sdk/routing/route.dart';
import 'package:here_sdk/src/sdk/routing/route_railway_crossing.dart';
import 'package:here_sdk/src/sdk/routing/route_stop.dart';
import 'package:here_sdk/src/sdk/routing/section.dart';
import 'package:here_sdk/src/sdk/routing/section_notice.dart';
import 'package:here_sdk/src/sdk/routing/segment_reference.dart';
import 'package:here_sdk/src/sdk/routing/signpost_label.dart';
import 'package:here_sdk/src/sdk/routing/span.dart';
import 'package:here_sdk/src/sdk/routing/street_attributes.dart';
import 'package:here_sdk/src/sdk/routing/toll.dart';
import 'package:here_sdk/src/sdk/routing/toll_fare.dart';
import 'package:here_sdk/src/sdk/routing/traffic_incident_on_route.dart';
import 'package:here_sdk/src/sdk/routing/traffic_on_section.dart';
import 'package:here_sdk/src/sdk/routing/traffic_on_span.dart';
import 'package:here_sdk/src/sdk/routing/transit_incident.dart';
import 'package:here_sdk/src/sdk/routing/transit_mode.dart';
import 'package:here_sdk/src/sdk/routing/transit_stop.dart';
import 'package:here_sdk/src/sdk/routing/violated_restriction.dart';
import 'package:here_sdk/src/sdk/routing/walk_attributes.dart';
import 'package:here_sdk/src/sdk/routing/waypoint.dart';
import 'package:here_sdk/src/sdk/routing/zone_category.dart';
import 'package:here_sdk/src/sdk/transport/truck_road_type.dart';
import 'package:here_sdk/src/sdk/core/external_i_d.dart';
import 'package:here_sdk/src/sdk/search/contact.dart';
import 'package:here_sdk/src/sdk/search/e_mobility_service_provider.dart';
import 'package:here_sdk/src/sdk/search/e_v_charging_station.dart';
import 'package:here_sdk/src/sdk/search/e_v_s_e_connector.dart';
import 'package:here_sdk/src/sdk/search/email_address.dart';
import 'package:here_sdk/src/sdk/search/evse.dart';
import 'package:here_sdk/src/sdk/search/fuel_additive.dart';
import 'package:here_sdk/src/sdk/search/generic_fuel.dart';
import 'package:here_sdk/src/sdk/search/highlight_type.dart';
import 'package:here_sdk/src/sdk/search/index_range.dart';
import 'package:here_sdk/src/sdk/search/landline_phone.dart';
import 'package:here_sdk/src/sdk/search/mobile_phone.dart';
import 'package:here_sdk/src/sdk/search/opening_hours.dart';
import 'package:here_sdk/src/sdk/search/place.dart';
import 'package:here_sdk/src/sdk/search/place_category.dart';
import 'package:here_sdk/src/sdk/search/place_chain.dart';
import 'package:here_sdk/src/sdk/search/place_food_type.dart';
import 'package:here_sdk/src/sdk/search/schedule_details.dart';
import 'package:here_sdk/src/sdk/search/suggestion.dart';
import 'package:here_sdk/src/sdk/search/supplier_reference.dart';
import 'package:here_sdk/src/sdk/search/truck_fuel.dart';
import 'package:here_sdk/src/sdk/search/web_editorial.dart';
import 'package:here_sdk/src/sdk/search/web_image.dart';
import 'package:here_sdk/src/sdk/search/web_rating.dart';
import 'package:here_sdk/src/sdk/search/website_address.dart';
import 'package:here_sdk/src/sdk/transport/fuel_type.dart';
import 'package:here_sdk/src/sdk/transport/truck_fuel_type.dart';
import 'package:here_sdk/src/sdk/core/geo_polyline.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_flow.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_incident.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_incident_impact.dart';
// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//








final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_create_handle'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_release_handle'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_insert'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_iterator'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = coreTypeslistofSdkCoreGeocoordinatesToFfi(element);
    _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIterator(handle);
  while (_coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(coreTypeslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_core_typesListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesFromFfi(_handle);
  coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _coreTypeslistofCoreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _coreTypeslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_core_typesListOf_sdk_core_GeoBox_create_handle'));
final _coreTypeslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoBox_release_handle'));
final _coreTypeslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoBox_insert'));
final _coreTypeslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoBox_iterator'));
final _coreTypeslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoBox_iterator_release_handle'));
final _coreTypeslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoBox_iterator_is_valid'));
final _coreTypeslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoBox_iterator_increment'));
final _coreTypeslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> coreTypeslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _coreTypeslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _coreTypeslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> coreTypeslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _coreTypeslistofSdkCoreGeoboxIterator(handle);
  while (_coreTypeslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _coreTypeslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _coreTypeslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _coreTypeslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void coreTypeslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _coreTypeslistofSdkCoreGeoboxReleaseHandle(handle);

final _coreTypeslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoBox_create_handle_nullable'));
final _coreTypeslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoBox_release_handle_nullable'));
final _coreTypeslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> coreTypeslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = coreTypeslistofSdkCoreGeoboxToFfi(value);
  final result = _coreTypeslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  coreTypeslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? coreTypeslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _coreTypeslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = coreTypeslistofSdkCoreGeoboxFromFfi(_handle);
  coreTypeslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void coreTypeslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _coreTypeslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _coreTypeslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_create_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_release_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_insert'));
final _coreTypeslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> coreTypeslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _coreTypeslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _coreTypeslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> coreTypeslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _coreTypeslistofSdkCoreGeocoordinatesIterator(handle);
  while (_coreTypeslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _coreTypeslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _coreTypeslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _coreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _coreTypeslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _coreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _coreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _coreTypeslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> coreTypeslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = coreTypeslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _coreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? coreTypeslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _coreTypeslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = coreTypeslistofSdkCoreGeocoordinatesFromFfi(_handle);
  coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _coreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);


// Copyright (c) 2019 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.































final _harpPluginsOmvBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_Int_create_handle'));
final _harpPluginsOmvBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_Int_release_handle'));
final _harpPluginsOmvBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_omv_bindingsListOf_Int_insert'));
final _harpPluginsOmvBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_Int_iterator'));
final _harpPluginsOmvBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_Int_iterator_release_handle'));
final _harpPluginsOmvBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_Int_iterator_is_valid'));
final _harpPluginsOmvBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_Int_iterator_increment'));
final _harpPluginsOmvBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_Int_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofIntToFfi(List<int> value) {
  final _result = _harpPluginsOmvBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _harpPluginsOmvBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> harpPluginsOmvBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofIntIterator(handle);
  while (_harpPluginsOmvBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _harpPluginsOmvBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofIntReleaseHandle(handle);

final _harpPluginsOmvBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_Int_create_handle_nullable'));
final _harpPluginsOmvBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_Int_release_handle_nullable'));
final _harpPluginsOmvBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofIntToFfi(value);
  final result = _harpPluginsOmvBindingslistofIntCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? harpPluginsOmvBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofIntGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofIntFromFfi(_handle);
  harpPluginsOmvBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofIntReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_String_create_handle'));
final _harpPluginsOmvBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_String_release_handle'));
final _harpPluginsOmvBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_String_insert'));
final _harpPluginsOmvBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_String_iterator'));
final _harpPluginsOmvBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_String_iterator_release_handle'));
final _harpPluginsOmvBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_String_iterator_is_valid'));
final _harpPluginsOmvBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_String_iterator_increment'));
final _harpPluginsOmvBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_String_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofStringToFfi(List<String> value) {
  final _result = _harpPluginsOmvBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _harpPluginsOmvBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> harpPluginsOmvBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofStringIterator(handle);
  while (_harpPluginsOmvBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofStringReleaseHandle(handle);

final _harpPluginsOmvBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_String_create_handle_nullable'));
final _harpPluginsOmvBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_String_release_handle_nullable'));
final _harpPluginsOmvBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_String_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofStringToFfi(value);
  final result = _harpPluginsOmvBindingslistofStringCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? harpPluginsOmvBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofStringGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofStringFromFfi(_handle);
  harpPluginsOmvBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofStringReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofHarpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_insert'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_iterator'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _harpPluginsOmvBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _harpPluginsOmvBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> harpPluginsOmvBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkCoreGeoboxIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? harpPluginsOmvBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkCoreGeoboxFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkCorePoint2dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_create_handle'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_release_handle'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_insert'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_iterator'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCorePoint2dToFfi(List<Point2D> value) {
  final _result = _harpPluginsOmvBindingslistofSdkCorePoint2dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCorePoint2dToFfi(element);
    _harpPluginsOmvBindingslistofSdkCorePoint2dInsert(_result, _elementHandle);
    sdkCorePoint2dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2D> harpPluginsOmvBindingslistofSdkCorePoint2dFromFfi(Pointer<Void> handle) {
  final result = List<Point2D>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkCorePoint2dIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkCorePoint2dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCorePoint2dFromFfi(_elementHandle));
    } finally {
      sdkCorePoint2dReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkCorePoint2dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCorePoint2dReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkCorePoint2dReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkCorePoint2dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCorePoint2dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_Point2D_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCorePoint2dToFfiNullable(List<Point2D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkCorePoint2dToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkCorePoint2dCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

List<Point2D>? harpPluginsOmvBindingslistofSdkCorePoint2dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkCorePoint2dGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkCorePoint2dFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCorePoint2dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkCorePoint2dReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateToFfi(List<MapCameraUpdate> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcameraupdateToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateInsert(_result, _elementHandle);
    sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraUpdate> harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraUpdate>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcameraupdateFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraUpdate_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateToFfiNullable(List<MapCameraUpdate>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraUpdate>? harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryToFfi(List<MapContentCategory> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcontentcategoryToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryInsert(_result, _elementHandle);
    sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapContentCategory> harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryFromFfi(Pointer<Void> handle) {
  final result = List<MapContentCategory>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcontentcategoryFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapContentCategory_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryToFfiNullable(List<MapContentCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

List<MapContentCategory>? harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpPluginsOmvBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpPluginsOmvBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarker3dToFfi(List<MapMarker3D> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarker3dToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dInsert(_result, _elementHandle);
    sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker3D> harpPluginsOmvBindingslistofSdkMapviewMapmarker3dFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker3D>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarker3dFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker3D_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarker3dToFfiNullable(List<MapMarker3D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapmarker3dToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker3D>? harpPluginsOmvBindingslistofSdkMapviewMapmarker3dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapmarker3dFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(List<MapMarkerTextStylePlacement> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerTextstylePlacementToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert(_result, _elementHandle);
    sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerTextStylePlacement> harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerTextStylePlacement>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerTextstylePlacementFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfiNullable(List<MapMarkerTextStylePlacement>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerTextStylePlacement>? harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeToFfi(List<MapMeasureRange> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmeasurerangeToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeInsert(_result, _elementHandle);
    sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMeasureRange> harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeFromFfi(Pointer<Void> handle) {
  final result = List<MapMeasureRange>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmeasurerangeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMeasureRange_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeToFfiNullable(List<MapMeasureRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

List<MapMeasureRange>? harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> harpPluginsOmvBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? harpPluginsOmvBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> harpPluginsOmvBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? harpPluginsOmvBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(List<MapSceneMapPickFilterContentType> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapsceneMappickfilterContenttypeToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert(_result, _elementHandle);
    sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapSceneMapPickFilterContentType> harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(Pointer<Void> handle) {
  final result = List<MapSceneMapPickFilterContentType>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapsceneMappickfilterContenttypeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfiNullable(List<MapSceneMapPickFilterContentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

List<MapSceneMapPickFilterContentType>? harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(List<DataAttributeValue> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceDataattributevalueToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueInsert(_result, _elementHandle);
    sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<DataAttributeValue> harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(Pointer<Void> handle) {
  final result = List<DataAttributeValue>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceDataattributevalueFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueToFfiNullable(List<DataAttributeValue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

List<DataAttributeValue>? harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataToFfi(List<LineData> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceLinedataToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataInsert(_result, _elementHandle);
    sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LineData> harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataFromFfi(Pointer<Void> handle) {
  final result = List<LineData>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceLinedataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_LineData_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataToFfiNullable(List<LineData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

List<LineData>? harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataToFfi(List<PointData> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePointdataToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PointData> harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataFromFfi(Pointer<Void> handle) {
  final result = List<PointData>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePointdataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PointData_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataToFfiNullable(List<PointData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

List<PointData>? harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataToFfi(List<PolygonData> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePolygondataToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PolygonData> harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataFromFfi(Pointer<Void> handle) {
  final result = List<PolygonData>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePolygondataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_datasource_PolygonData_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataToFfiNullable(List<PolygonData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

List<PolygonData>? harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable(handle);

final _harpPluginsOmvBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_create_handle'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_release_handle'));
final _harpPluginsOmvBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_put'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_iterator'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_iterator_increment'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> harpPluginsOmvBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _harpPluginsOmvBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _harpPluginsOmvBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> harpPluginsOmvBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _harpPluginsOmvBindingsmapofDoubleToDoubleIterator(handle);
  while (_harpPluginsOmvBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _harpPluginsOmvBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _harpPluginsOmvBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingsmapofDoubleToDoubleToFfi(value);
  final result = _harpPluginsOmvBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  harpPluginsOmvBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? harpPluginsOmvBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = harpPluginsOmvBindingsmapofDoubleToDoubleFromFfi(_handle);
  harpPluginsOmvBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _harpPluginsOmvBindingsmapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_create_handle'));
final _harpPluginsOmvBindingsmapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_release_handle'));
final _harpPluginsOmvBindingsmapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_put'));
final _harpPluginsOmvBindingsmapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_iterator'));
final _harpPluginsOmvBindingsmapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_iterator_release_handle'));
final _harpPluginsOmvBindingsmapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_iterator_is_valid'));
final _harpPluginsOmvBindingsmapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_iterator_increment'));
final _harpPluginsOmvBindingsmapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_iterator_get_key'));
final _harpPluginsOmvBindingsmapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_iterator_get_value'));

Pointer<Void> harpPluginsOmvBindingsmapofStringToStringToFfi(Map<String, String> value) {
  final _result = _harpPluginsOmvBindingsmapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _harpPluginsOmvBindingsmapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> harpPluginsOmvBindingsmapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _harpPluginsOmvBindingsmapofStringToStringIterator(handle);
  while (_harpPluginsOmvBindingsmapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsOmvBindingsmapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsOmvBindingsmapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsOmvBindingsmapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingsmapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingsmapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingsmapofStringToStringReleaseHandle(handle);

final _harpPluginsOmvBindingsmapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_create_handle_nullable'));
final _harpPluginsOmvBindingsmapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_release_handle_nullable'));
final _harpPluginsOmvBindingsmapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_String_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingsmapofStringToStringToFfiNullable(Map<String, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingsmapofStringToStringToFfi(value);
  final result = _harpPluginsOmvBindingsmapofStringToStringCreateHandleNullable(_handle);
  harpPluginsOmvBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String>? harpPluginsOmvBindingsmapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingsmapofStringToStringGetValueNullable(handle);
  final result = harpPluginsOmvBindingsmapofStringToStringFromFfi(_handle);
  harpPluginsOmvBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingsmapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingsmapofStringToStringReleaseHandleNullable(handle);

final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_create_handle'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_release_handle'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_put'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_iterator'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_iterator_release_handle'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_iterator_is_valid'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_iterator_increment'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_iterator_get_key'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_iterator_get_value'));

Pointer<Void> harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = harpPluginsOmvBindingslistofStringToFfi(entry.value);
    _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    harpPluginsOmvBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIterator(handle);
  while (_harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        harpPluginsOmvBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      harpPluginsOmvBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseHandle(handle);

final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_create_handle_nullable'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_release_handle_nullable'));
final _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_harp_plugins_omv_bindingsListOf_String_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringToFfi(value);
  final result = _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringCreateHandleNullable(_handle);
  harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringGetValueNullable(handle);
  final result = harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringFromFfi(_handle);
  harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingsmapofStringToHarpPluginsOmvBindingslistofStringReleaseHandleNullable(handle);

final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystatePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Uint32),
    void Function(Pointer<Void>, Pointer<Void>, int)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_put'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_release_handle'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_is_valid'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_increment'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_key'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_value'));

Pointer<Void> harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateToFfi(Map<String, VisibilityState> value) {
  final _result = _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkMapviewVisibilitystateToFfi(entry.value);
    _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystatePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VisibilityState> harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(Pointer<Void> handle) {
  final result = Map<String, VisibilityState>();
  final _iteratorHandle = _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIterator(handle);
  while (_harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkMapviewVisibilitystateFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle(handle);

final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle_nullable'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle_nullable'));
final _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_String_to_sdk_mapview_VisibilityState_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateToFfiNullable(Map<String, VisibilityState>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateToFfi(value);
  final result = _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable(_handle);
  harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

Map<String, VisibilityState>? harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable(handle);
  final result = harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(_handle);
  harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable(handle);

final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Double),
    void Function(Pointer<Void>, Pointer<Void>, double)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_put'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_release_handle'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_is_valid'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_increment'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_key'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_value'));

Pointer<Void> harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(Map<MapMeasure, double> value) {
  final _result = _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkMapviewMapmeasureToFfi(entry.key);
    final _valueHandle = (entry.value);
    _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoublePut(_result, _keyHandle, _valueHandle);
    sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
    
  }
  return _result;
}

Map<MapMeasure, double> harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<MapMeasure, double>();
  final _iteratorHandle = _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIterator(handle);
  while (_harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[sdkMapviewMapmeasureFromFfi(_keyHandle)] =
        (_valueHandle);
    } finally {
      sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
      
    }
    _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle(handle);

final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle_nullable'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle_nullable'));
final _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleToFfiNullable(Map<MapMeasure, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(value);
  final result = _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable(_handle);
  harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<MapMeasure, double>? harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable(handle);
  final result = harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(_handle);
  harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2019 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.































final _harpPluginsRasterBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_create_handle'));
final _harpPluginsRasterBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_release_handle'));
final _harpPluginsRasterBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_insert'));
final _harpPluginsRasterBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator'));
final _harpPluginsRasterBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_release_handle'));
final _harpPluginsRasterBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_is_valid'));
final _harpPluginsRasterBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_increment'));
final _harpPluginsRasterBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofIntToFfi(List<int> value) {
  final _result = _harpPluginsRasterBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _harpPluginsRasterBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> harpPluginsRasterBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofIntIterator(handle);
  while (_harpPluginsRasterBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _harpPluginsRasterBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofIntReleaseHandle(handle);

final _harpPluginsRasterBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_create_handle_nullable'));
final _harpPluginsRasterBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_release_handle_nullable'));
final _harpPluginsRasterBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofIntToFfi(value);
  final result = _harpPluginsRasterBindingslistofIntCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? harpPluginsRasterBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofIntGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofIntFromFfi(_handle);
  harpPluginsRasterBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofIntReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_String_create_handle'));
final _harpPluginsRasterBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_String_release_handle'));
final _harpPluginsRasterBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_String_insert'));
final _harpPluginsRasterBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_String_iterator'));
final _harpPluginsRasterBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_String_iterator_release_handle'));
final _harpPluginsRasterBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_String_iterator_is_valid'));
final _harpPluginsRasterBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_String_iterator_increment'));
final _harpPluginsRasterBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_String_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofStringToFfi(List<String> value) {
  final _result = _harpPluginsRasterBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _harpPluginsRasterBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> harpPluginsRasterBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofStringIterator(handle);
  while (_harpPluginsRasterBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofStringReleaseHandle(handle);

final _harpPluginsRasterBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_String_create_handle_nullable'));
final _harpPluginsRasterBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_String_release_handle_nullable'));
final _harpPluginsRasterBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_String_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofStringToFfi(value);
  final result = _harpPluginsRasterBindingslistofStringCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? harpPluginsRasterBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofStringGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofStringFromFfi(_handle);
  harpPluginsRasterBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofStringReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofHarpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_insert'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_iterator'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _harpPluginsRasterBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _harpPluginsRasterBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> harpPluginsRasterBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkCoreGeoboxIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? harpPluginsRasterBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkCoreGeoboxFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkCorePoint2dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_create_handle'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_release_handle'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_insert'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_iterator'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCorePoint2dToFfi(List<Point2D> value) {
  final _result = _harpPluginsRasterBindingslistofSdkCorePoint2dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCorePoint2dToFfi(element);
    _harpPluginsRasterBindingslistofSdkCorePoint2dInsert(_result, _elementHandle);
    sdkCorePoint2dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2D> harpPluginsRasterBindingslistofSdkCorePoint2dFromFfi(Pointer<Void> handle) {
  final result = List<Point2D>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkCorePoint2dIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkCorePoint2dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCorePoint2dFromFfi(_elementHandle));
    } finally {
      sdkCorePoint2dReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkCorePoint2dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCorePoint2dReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkCorePoint2dReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkCorePoint2dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCorePoint2dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_Point2D_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCorePoint2dToFfiNullable(List<Point2D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkCorePoint2dToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkCorePoint2dCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

List<Point2D>? harpPluginsRasterBindingslistofSdkCorePoint2dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkCorePoint2dGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkCorePoint2dFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCorePoint2dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkCorePoint2dReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateToFfi(List<MapCameraUpdate> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcameraupdateToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateInsert(_result, _elementHandle);
    sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraUpdate> harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraUpdate>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcameraupdateFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraUpdate_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateToFfiNullable(List<MapCameraUpdate>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraUpdate>? harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryToFfi(List<MapContentCategory> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcontentcategoryToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryInsert(_result, _elementHandle);
    sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapContentCategory> harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryFromFfi(Pointer<Void> handle) {
  final result = List<MapContentCategory>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcontentcategoryFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapContentCategory_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryToFfiNullable(List<MapContentCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

List<MapContentCategory>? harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpPluginsRasterBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpPluginsRasterBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarker3dToFfi(List<MapMarker3D> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarker3dToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dInsert(_result, _elementHandle);
    sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker3D> harpPluginsRasterBindingslistofSdkMapviewMapmarker3dFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker3D>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarker3dFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker3D_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarker3dToFfiNullable(List<MapMarker3D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapmarker3dToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker3D>? harpPluginsRasterBindingslistofSdkMapviewMapmarker3dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapmarker3dFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(List<MapMarkerTextStylePlacement> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerTextstylePlacementToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert(_result, _elementHandle);
    sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerTextStylePlacement> harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerTextStylePlacement>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerTextstylePlacementFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfiNullable(List<MapMarkerTextStylePlacement>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerTextStylePlacement>? harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeToFfi(List<MapMeasureRange> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmeasurerangeToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeInsert(_result, _elementHandle);
    sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMeasureRange> harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeFromFfi(Pointer<Void> handle) {
  final result = List<MapMeasureRange>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmeasurerangeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMeasureRange_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeToFfiNullable(List<MapMeasureRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

List<MapMeasureRange>? harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> harpPluginsRasterBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? harpPluginsRasterBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> harpPluginsRasterBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? harpPluginsRasterBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(List<MapSceneMapPickFilterContentType> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapsceneMappickfilterContenttypeToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert(_result, _elementHandle);
    sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapSceneMapPickFilterContentType> harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(Pointer<Void> handle) {
  final result = List<MapSceneMapPickFilterContentType>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapsceneMappickfilterContenttypeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfiNullable(List<MapSceneMapPickFilterContentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

List<MapSceneMapPickFilterContentType>? harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(List<DataAttributeValue> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceDataattributevalueToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueInsert(_result, _elementHandle);
    sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<DataAttributeValue> harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(Pointer<Void> handle) {
  final result = List<DataAttributeValue>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceDataattributevalueFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueToFfiNullable(List<DataAttributeValue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

List<DataAttributeValue>? harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataToFfi(List<LineData> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceLinedataToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataInsert(_result, _elementHandle);
    sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LineData> harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataFromFfi(Pointer<Void> handle) {
  final result = List<LineData>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceLinedataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_LineData_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataToFfiNullable(List<LineData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

List<LineData>? harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataToFfi(List<PointData> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePointdataToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PointData> harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataFromFfi(Pointer<Void> handle) {
  final result = List<PointData>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePointdataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PointData_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataToFfiNullable(List<PointData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

List<PointData>? harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataToFfi(List<PolygonData> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePolygondataToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PolygonData> harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataFromFfi(Pointer<Void> handle) {
  final result = List<PolygonData>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePolygondataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_datasource_PolygonData_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataToFfiNullable(List<PolygonData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

List<PolygonData>? harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable(handle);

final _harpPluginsRasterBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_create_handle'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_release_handle'));
final _harpPluginsRasterBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_put'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_iterator'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_iterator_increment'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> harpPluginsRasterBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _harpPluginsRasterBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _harpPluginsRasterBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> harpPluginsRasterBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _harpPluginsRasterBindingsmapofDoubleToDoubleIterator(handle);
  while (_harpPluginsRasterBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _harpPluginsRasterBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _harpPluginsRasterBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingsmapofDoubleToDoubleToFfi(value);
  final result = _harpPluginsRasterBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  harpPluginsRasterBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? harpPluginsRasterBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = harpPluginsRasterBindingsmapofDoubleToDoubleFromFfi(_handle);
  harpPluginsRasterBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _harpPluginsRasterBindingsmapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_create_handle'));
final _harpPluginsRasterBindingsmapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_release_handle'));
final _harpPluginsRasterBindingsmapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_put'));
final _harpPluginsRasterBindingsmapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_release_handle'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_is_valid'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_increment'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_get_key'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_get_value'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToStringToFfi(Map<String, String> value) {
  final _result = _harpPluginsRasterBindingsmapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _harpPluginsRasterBindingsmapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> harpPluginsRasterBindingsmapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _harpPluginsRasterBindingsmapofStringToStringIterator(handle);
  while (_harpPluginsRasterBindingsmapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsRasterBindingsmapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsRasterBindingsmapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsRasterBindingsmapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingsmapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingsmapofStringToStringReleaseHandle(handle);

final _harpPluginsRasterBindingsmapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_create_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_release_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToStringToFfiNullable(Map<String, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingsmapofStringToStringToFfi(value);
  final result = _harpPluginsRasterBindingsmapofStringToStringCreateHandleNullable(_handle);
  harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String>? harpPluginsRasterBindingsmapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingsmapofStringToStringGetValueNullable(handle);
  final result = harpPluginsRasterBindingsmapofStringToStringFromFfi(_handle);
  harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingsmapofStringToStringReleaseHandleNullable(handle);

final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_create_handle'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_release_handle'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_put'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_iterator'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_iterator_release_handle'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_iterator_is_valid'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_iterator_increment'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_iterator_get_key'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_iterator_get_value'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = harpPluginsRasterBindingslistofStringToFfi(entry.value);
    _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    harpPluginsRasterBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIterator(handle);
  while (_harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        harpPluginsRasterBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      harpPluginsRasterBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseHandle(handle);

final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_create_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_release_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_harp_plugins_raster_bindingsListOf_String_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringToFfi(value);
  final result = _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringCreateHandleNullable(_handle);
  harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringGetValueNullable(handle);
  final result = harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringFromFfi(_handle);
  harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingsmapofStringToHarpPluginsRasterBindingslistofStringReleaseHandleNullable(handle);

final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystatePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Uint32),
    void Function(Pointer<Void>, Pointer<Void>, int)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_put'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_release_handle'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_is_valid'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_increment'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_key'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_value'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateToFfi(Map<String, VisibilityState> value) {
  final _result = _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkMapviewVisibilitystateToFfi(entry.value);
    _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystatePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VisibilityState> harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(Pointer<Void> handle) {
  final result = Map<String, VisibilityState>();
  final _iteratorHandle = _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIterator(handle);
  while (_harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkMapviewVisibilitystateFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle(handle);

final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_sdk_mapview_VisibilityState_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateToFfiNullable(Map<String, VisibilityState>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateToFfi(value);
  final result = _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable(_handle);
  harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

Map<String, VisibilityState>? harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable(handle);
  final result = harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(_handle);
  harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable(handle);

final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Double),
    void Function(Pointer<Void>, Pointer<Void>, double)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_put'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_release_handle'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_is_valid'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_increment'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_key'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_value'));

Pointer<Void> harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(Map<MapMeasure, double> value) {
  final _result = _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkMapviewMapmeasureToFfi(entry.key);
    final _valueHandle = (entry.value);
    _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoublePut(_result, _keyHandle, _valueHandle);
    sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
    
  }
  return _result;
}

Map<MapMeasure, double> harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<MapMeasure, double>();
  final _iteratorHandle = _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIterator(handle);
  while (_harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[sdkMapviewMapmeasureFromFfi(_keyHandle)] =
        (_valueHandle);
    } finally {
      sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
      
    }
    _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle(handle);

final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle_nullable'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle_nullable'));
final _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleToFfiNullable(Map<MapMeasure, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(value);
  final result = _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable(_handle);
  harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<MapMeasure, double>? harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable(handle);
  final result = harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(_handle);
  harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2019-2024 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//































final _harpSdkBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_Int_create_handle'));
final _harpSdkBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_Int_release_handle'));
final _harpSdkBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_sdk_bindingsListOf_Int_insert'));
final _harpSdkBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_Int_iterator'));
final _harpSdkBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_Int_iterator_release_handle'));
final _harpSdkBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_Int_iterator_is_valid'));
final _harpSdkBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_Int_iterator_increment'));
final _harpSdkBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_Int_iterator_get'));

Pointer<Void> harpSdkBindingslistofIntToFfi(List<int> value) {
  final _result = _harpSdkBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _harpSdkBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> harpSdkBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofIntIterator(handle);
  while (_harpSdkBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _harpSdkBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofIntReleaseHandle(handle);

final _harpSdkBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_Int_create_handle_nullable'));
final _harpSdkBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_Int_release_handle_nullable'));
final _harpSdkBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofIntToFfi(value);
  final result = _harpSdkBindingslistofIntCreateHandleNullable(_handle);
  harpSdkBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? harpSdkBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofIntGetValueNullable(handle);
  final result = harpSdkBindingslistofIntFromFfi(_handle);
  harpSdkBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofIntReleaseHandleNullable(handle);

final _harpSdkBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_String_create_handle'));
final _harpSdkBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_String_release_handle'));
final _harpSdkBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_String_insert'));
final _harpSdkBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_String_iterator'));
final _harpSdkBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_String_iterator_release_handle'));
final _harpSdkBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_String_iterator_is_valid'));
final _harpSdkBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_String_iterator_increment'));
final _harpSdkBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_String_iterator_get'));

Pointer<Void> harpSdkBindingslistofStringToFfi(List<String> value) {
  final _result = _harpSdkBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _harpSdkBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> harpSdkBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofStringIterator(handle);
  while (_harpSdkBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofStringReleaseHandle(handle);

final _harpSdkBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_String_create_handle_nullable'));
final _harpSdkBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_String_release_handle_nullable'));
final _harpSdkBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_String_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofStringToFfi(value);
  final result = _harpSdkBindingslistofStringCreateHandleNullable(_handle);
  harpSdkBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? harpSdkBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofStringGetValueNullable(handle);
  final result = harpSdkBindingslistofStringFromFfi(_handle);
  harpSdkBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofStringReleaseHandleNullable(handle);

final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofHarpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpSdkBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpSdkBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _harpSdkBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _harpSdkBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_insert'));
final _harpSdkBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_iterator'));
final _harpSdkBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _harpSdkBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _harpSdkBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _harpSdkBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _harpSdkBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _harpSdkBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> harpSdkBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkCoreGeoboxIterator(handle);
  while (_harpSdkBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _harpSdkBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _harpSdkBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? harpSdkBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkCoreGeoboxFromFfi(_handle);
  harpSdkBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpSdkBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpSdkBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkCorePoint2dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_create_handle'));
final _harpSdkBindingslistofSdkCorePoint2dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_release_handle'));
final _harpSdkBindingslistofSdkCorePoint2dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_insert'));
final _harpSdkBindingslistofSdkCorePoint2dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_iterator'));
final _harpSdkBindingslistofSdkCorePoint2dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_iterator_release_handle'));
final _harpSdkBindingslistofSdkCorePoint2dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_iterator_is_valid'));
final _harpSdkBindingslistofSdkCorePoint2dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_iterator_increment'));
final _harpSdkBindingslistofSdkCorePoint2dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkCorePoint2dToFfi(List<Point2D> value) {
  final _result = _harpSdkBindingslistofSdkCorePoint2dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCorePoint2dToFfi(element);
    _harpSdkBindingslistofSdkCorePoint2dInsert(_result, _elementHandle);
    sdkCorePoint2dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2D> harpSdkBindingslistofSdkCorePoint2dFromFfi(Pointer<Void> handle) {
  final result = List<Point2D>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkCorePoint2dIterator(handle);
  while (_harpSdkBindingslistofSdkCorePoint2dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkCorePoint2dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCorePoint2dFromFfi(_elementHandle));
    } finally {
      sdkCorePoint2dReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkCorePoint2dIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkCorePoint2dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkCorePoint2dReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkCorePoint2dReleaseHandle(handle);

final _harpSdkBindingslistofSdkCorePoint2dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_create_handle_nullable'));
final _harpSdkBindingslistofSdkCorePoint2dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_release_handle_nullable'));
final _harpSdkBindingslistofSdkCorePoint2dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_Point2D_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkCorePoint2dToFfiNullable(List<Point2D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkCorePoint2dToFfi(value);
  final result = _harpSdkBindingslistofSdkCorePoint2dCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

List<Point2D>? harpSdkBindingslistofSdkCorePoint2dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkCorePoint2dGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkCorePoint2dFromFfi(_handle);
  harpSdkBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkCorePoint2dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkCorePoint2dReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapcameraupdateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_insert'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcameraupdateToFfi(List<MapCameraUpdate> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapcameraupdateCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcameraupdateToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapcameraupdateInsert(_result, _elementHandle);
    sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraUpdate> harpSdkBindingslistofSdkMapviewMapcameraupdateFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraUpdate>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapcameraupdateIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcameraupdateFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcameraupdateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraUpdate_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcameraupdateToFfiNullable(List<MapCameraUpdate>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapcameraupdateToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraUpdate>? harpSdkBindingslistofSdkMapviewMapcameraupdateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapcameraupdateGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapcameraupdateFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapcontentcategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_insert'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_iterator'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcontentcategoryToFfi(List<MapContentCategory> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapcontentcategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcontentcategoryToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapcontentcategoryInsert(_result, _elementHandle);
    sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapContentCategory> harpSdkBindingslistofSdkMapviewMapcontentcategoryFromFfi(Pointer<Void> handle) {
  final result = List<MapContentCategory>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapcontentcategoryIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcontentcategoryFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcontentcategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapContentCategory_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcontentcategoryToFfiNullable(List<MapContentCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapcontentcategoryToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

List<MapContentCategory>? harpSdkBindingslistofSdkMapviewMapcontentcategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapcontentcategoryGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapcontentcategoryFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpSdkBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpSdkBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapmarker3dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_insert'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_iterator'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarker3dToFfi(List<MapMarker3D> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapmarker3dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarker3dToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapmarker3dInsert(_result, _elementHandle);
    sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker3D> harpSdkBindingslistofSdkMapviewMapmarker3dFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker3D>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapmarker3dIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapmarker3dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarker3dFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapmarker3dReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapmarker3dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarker3dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker3D_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarker3dToFfiNullable(List<MapMarker3D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapmarker3dToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapmarker3dCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker3D>? harpSdkBindingslistofSdkMapviewMapmarker3dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapmarker3dGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapmarker3dFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarker3dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_insert'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(List<MapMarkerTextStylePlacement> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerTextstylePlacementToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert(_result, _elementHandle);
    sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerTextStylePlacement> harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerTextStylePlacement>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerTextstylePlacementFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfiNullable(List<MapMarkerTextStylePlacement>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerTextStylePlacement>? harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapmeasurerangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_insert'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_iterator'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmeasurerangeToFfi(List<MapMeasureRange> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapmeasurerangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmeasurerangeToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapmeasurerangeInsert(_result, _elementHandle);
    sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMeasureRange> harpSdkBindingslistofSdkMapviewMapmeasurerangeFromFfi(Pointer<Void> handle) {
  final result = List<MapMeasureRange>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapmeasurerangeIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmeasurerangeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmeasurerangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMeasureRange_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmeasurerangeToFfiNullable(List<MapMeasureRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapmeasurerangeToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

List<MapMeasureRange>? harpSdkBindingslistofSdkMapviewMapmeasurerangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapmeasurerangeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapmeasurerangeFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _harpSdkBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _harpSdkBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _harpSdkBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _harpSdkBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _harpSdkBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> harpSdkBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? harpSdkBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _harpSdkBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _harpSdkBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _harpSdkBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _harpSdkBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _harpSdkBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> harpSdkBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? harpSdkBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_insert'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(List<MapSceneMapPickFilterContentType> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapsceneMappickfilterContenttypeToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert(_result, _elementHandle);
    sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapSceneMapPickFilterContentType> harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(Pointer<Void> handle) {
  final result = List<MapSceneMapPickFilterContentType>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapsceneMappickfilterContenttypeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfiNullable(List<MapSceneMapPickFilterContentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

List<MapSceneMapPickFilterContentType>? harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_insert'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(List<DataAttributeValue> value) {
  final _result = _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceDataattributevalueToFfi(element);
    _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueInsert(_result, _elementHandle);
    sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<DataAttributeValue> harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(Pointer<Void> handle) {
  final result = List<DataAttributeValue>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceDataattributevalueFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueToFfiNullable(List<DataAttributeValue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

List<DataAttributeValue>? harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewDatasourceLinedataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_create_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_insert'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_iterator'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourceLinedataToFfi(List<LineData> value) {
  final _result = _harpSdkBindingslistofSdkMapviewDatasourceLinedataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceLinedataToFfi(element);
    _harpSdkBindingslistofSdkMapviewDatasourceLinedataInsert(_result, _elementHandle);
    sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LineData> harpSdkBindingslistofSdkMapviewDatasourceLinedataFromFfi(Pointer<Void> handle) {
  final result = List<LineData>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewDatasourceLinedataIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceLinedataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourceLinedataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_LineData_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourceLinedataToFfiNullable(List<LineData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewDatasourceLinedataToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

List<LineData>? harpSdkBindingslistofSdkMapviewDatasourceLinedataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewDatasourceLinedataGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewDatasourceLinedataFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewDatasourcePointdataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_create_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_insert'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_iterator'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourcePointdataToFfi(List<PointData> value) {
  final _result = _harpSdkBindingslistofSdkMapviewDatasourcePointdataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePointdataToFfi(element);
    _harpSdkBindingslistofSdkMapviewDatasourcePointdataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PointData> harpSdkBindingslistofSdkMapviewDatasourcePointdataFromFfi(Pointer<Void> handle) {
  final result = List<PointData>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewDatasourcePointdataIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePointdataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourcePointdataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PointData_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourcePointdataToFfiNullable(List<PointData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewDatasourcePointdataToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

List<PointData>? harpSdkBindingslistofSdkMapviewDatasourcePointdataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewDatasourcePointdataGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewDatasourcePointdataFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_insert'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourcePolygondataToFfi(List<PolygonData> value) {
  final _result = _harpSdkBindingslistofSdkMapviewDatasourcePolygondataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePolygondataToFfi(element);
    _harpSdkBindingslistofSdkMapviewDatasourcePolygondataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PolygonData> harpSdkBindingslistofSdkMapviewDatasourcePolygondataFromFfi(Pointer<Void> handle) {
  final result = List<PolygonData>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePolygondataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_datasource_PolygonData_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewDatasourcePolygondataToFfiNullable(List<PolygonData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewDatasourcePolygondataToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

List<PolygonData>? harpSdkBindingslistofSdkMapviewDatasourcePolygondataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewDatasourcePolygondataFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable(handle);

final _harpSdkBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_create_handle'));
final _harpSdkBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_release_handle'));
final _harpSdkBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_put'));
final _harpSdkBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_iterator'));
final _harpSdkBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _harpSdkBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _harpSdkBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_iterator_increment'));
final _harpSdkBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _harpSdkBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> harpSdkBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _harpSdkBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _harpSdkBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> harpSdkBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _harpSdkBindingsmapofDoubleToDoubleIterator(handle);
  while (_harpSdkBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpSdkBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpSdkBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _harpSdkBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _harpSdkBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _harpSdkBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _harpSdkBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> harpSdkBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingsmapofDoubleToDoubleToFfi(value);
  final result = _harpSdkBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  harpSdkBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? harpSdkBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = harpSdkBindingsmapofDoubleToDoubleFromFfi(_handle);
  harpSdkBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _harpSdkBindingsmapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_String_create_handle'));
final _harpSdkBindingsmapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_String_release_handle'));
final _harpSdkBindingsmapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_String_put'));
final _harpSdkBindingsmapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_String_iterator'));
final _harpSdkBindingsmapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_String_iterator_release_handle'));
final _harpSdkBindingsmapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_String_iterator_is_valid'));
final _harpSdkBindingsmapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_String_iterator_increment'));
final _harpSdkBindingsmapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_String_iterator_get_key'));
final _harpSdkBindingsmapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_String_iterator_get_value'));

Pointer<Void> harpSdkBindingsmapofStringToStringToFfi(Map<String, String> value) {
  final _result = _harpSdkBindingsmapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _harpSdkBindingsmapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> harpSdkBindingsmapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _harpSdkBindingsmapofStringToStringIterator(handle);
  while (_harpSdkBindingsmapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpSdkBindingsmapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpSdkBindingsmapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _harpSdkBindingsmapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingsmapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingsmapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingsmapofStringToStringReleaseHandle(handle);

final _harpSdkBindingsmapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_String_create_handle_nullable'));
final _harpSdkBindingsmapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_String_release_handle_nullable'));
final _harpSdkBindingsmapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_String_get_value_nullable'));

Pointer<Void> harpSdkBindingsmapofStringToStringToFfiNullable(Map<String, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingsmapofStringToStringToFfi(value);
  final result = _harpSdkBindingsmapofStringToStringCreateHandleNullable(_handle);
  harpSdkBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String>? harpSdkBindingsmapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingsmapofStringToStringGetValueNullable(handle);
  final result = harpSdkBindingsmapofStringToStringFromFfi(_handle);
  harpSdkBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingsmapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingsmapofStringToStringReleaseHandleNullable(handle);

final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_create_handle'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_release_handle'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_put'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_iterator'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_iterator_release_handle'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_iterator_is_valid'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_iterator_increment'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_iterator_get_key'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_iterator_get_value'));

Pointer<Void> harpSdkBindingsmapofStringToHarpSdkBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = harpSdkBindingslistofStringToFfi(entry.value);
    _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    harpSdkBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> harpSdkBindingsmapofStringToHarpSdkBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIterator(handle);
  while (_harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        harpSdkBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      harpSdkBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseHandle(handle);

final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_create_handle_nullable'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_release_handle_nullable'));
final _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_harp_sdk_bindingsListOf_String_get_value_nullable'));

Pointer<Void> harpSdkBindingsmapofStringToHarpSdkBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingsmapofStringToHarpSdkBindingslistofStringToFfi(value);
  final result = _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringCreateHandleNullable(_handle);
  harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? harpSdkBindingsmapofStringToHarpSdkBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringGetValueNullable(handle);
  final result = harpSdkBindingsmapofStringToHarpSdkBindingslistofStringFromFfi(_handle);
  harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingsmapofStringToHarpSdkBindingslistofStringReleaseHandleNullable(handle);

final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystatePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Uint32),
    void Function(Pointer<Void>, Pointer<Void>, int)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_put'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_release_handle'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_is_valid'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_increment'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_key'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_value'));

Pointer<Void> harpSdkBindingsmapofStringToSdkMapviewVisibilitystateToFfi(Map<String, VisibilityState> value) {
  final _result = _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkMapviewVisibilitystateToFfi(entry.value);
    _harpSdkBindingsmapofStringToSdkMapviewVisibilitystatePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VisibilityState> harpSdkBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(Pointer<Void> handle) {
  final result = Map<String, VisibilityState>();
  final _iteratorHandle = _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIterator(handle);
  while (_harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkMapviewVisibilitystateFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
    }
    _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle(handle);

final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle_nullable'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle_nullable'));
final _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_String_to_sdk_mapview_VisibilityState_get_value_nullable'));

Pointer<Void> harpSdkBindingsmapofStringToSdkMapviewVisibilitystateToFfiNullable(Map<String, VisibilityState>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingsmapofStringToSdkMapviewVisibilitystateToFfi(value);
  final result = _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable(_handle);
  harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

Map<String, VisibilityState>? harpSdkBindingsmapofStringToSdkMapviewVisibilitystateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable(handle);
  final result = harpSdkBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(_handle);
  harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable(handle);

final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Double),
    void Function(Pointer<Void>, Pointer<Void>, double)
  >('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_put'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_release_handle'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_is_valid'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_increment'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_key'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_value'));

Pointer<Void> harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(Map<MapMeasure, double> value) {
  final _result = _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkMapviewMapmeasureToFfi(entry.key);
    final _valueHandle = (entry.value);
    _harpSdkBindingsmapofSdkMapviewMapmeasureToDoublePut(_result, _keyHandle, _valueHandle);
    sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
    
  }
  return _result;
}

Map<MapMeasure, double> harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<MapMeasure, double>();
  final _iteratorHandle = _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIterator(handle);
  while (_harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[sdkMapviewMapmeasureFromFfi(_keyHandle)] =
        (_valueHandle);
    } finally {
      sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
      
    }
    _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle(handle);

final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle_nullable'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle_nullable'));
final _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_get_value_nullable'));

Pointer<Void> harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleToFfiNullable(Map<MapMeasure, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(value);
  final result = _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable(_handle);
  harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<MapMeasure, double>? harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable(handle);
  final result = harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(_handle);
  harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//




















final _heresdkCoreBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_Locale_create_handle'));
final _heresdkCoreBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_release_handle'));
final _heresdkCoreBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_insert'));
final _heresdkCoreBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator'));
final _heresdkCoreBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkCoreBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkCoreBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_increment'));
final _heresdkCoreBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkCoreBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkCoreBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkCoreBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofLocaleIterator(handle);
  while (_heresdkCoreBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofLocaleReleaseHandle(handle);

final _heresdkCoreBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkCoreBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkCoreBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofLocaleToFfi(value);
  final result = _heresdkCoreBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkCoreBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkCoreBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkCoreBindingslistofLocaleFromFfi(_handle);
  heresdkCoreBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofHeresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkCoreBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkCoreBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkCoreBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkCoreBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkCoreBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkCoreBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkCoreBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkCoreBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkCoreBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkCoreBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkCoreBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkCoreBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkCoreBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkCoreBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkCoreBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkCoreBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkCoreBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkCoreBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkCoreBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//




















final _heresdkGesturesBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_create_handle'));
final _heresdkGesturesBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_release_handle'));
final _heresdkGesturesBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_insert'));
final _heresdkGesturesBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator'));
final _heresdkGesturesBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkGesturesBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkGesturesBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_increment'));
final _heresdkGesturesBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkGesturesBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkGesturesBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkGesturesBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofLocaleIterator(handle);
  while (_heresdkGesturesBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofLocaleReleaseHandle(handle);

final _heresdkGesturesBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkGesturesBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkGesturesBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofLocaleToFfi(value);
  final result = _heresdkGesturesBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkGesturesBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofLocaleFromFfi(_handle);
  heresdkGesturesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofHeresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkGesturesBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkGesturesBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkGesturesBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkGesturesBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkGesturesBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkGesturesBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkGesturesBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkGesturesBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkGesturesBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkGesturesBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










































final _heresdkMapviewCommonBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Int_create_handle'));
final _heresdkMapviewCommonBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Int_release_handle'));
final _heresdkMapviewCommonBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Int_insert'));
final _heresdkMapviewCommonBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Int_iterator'));
final _heresdkMapviewCommonBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Int_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Int_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Int_iterator_increment'));
final _heresdkMapviewCommonBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkMapviewCommonBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkMapviewCommonBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkMapviewCommonBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofIntIterator(handle);
  while (_heresdkMapviewCommonBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkMapviewCommonBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofIntReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Int_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Int_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofIntToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofIntCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkMapviewCommonBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofIntGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofIntFromFfi(_handle);
  heresdkMapviewCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofIntReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_create_handle'));
final _heresdkMapviewCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_release_handle'));
final _heresdkMapviewCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_insert'));
final _heresdkMapviewCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofLocaleIterator(handle);
  while (_heresdkMapviewCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMapviewCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofLocaleFromFfi(_handle);
  heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_create_handle'));
final _heresdkMapviewCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_release_handle'));
final _heresdkMapviewCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_insert'));
final _heresdkMapviewCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator'));
final _heresdkMapviewCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkMapviewCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkMapviewCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkMapviewCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofStringIterator(handle);
  while (_heresdkMapviewCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofStringToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkMapviewCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofStringFromFfi(_handle);
  heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofHeresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkMapviewCommonBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkMapviewCommonBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCorePoint2dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_insert'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCorePoint2dToFfi(List<Point2D> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCorePoint2dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCorePoint2dToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCorePoint2dInsert(_result, _elementHandle);
    sdkCorePoint2dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2D> heresdkMapviewCommonBindingslistofSdkCorePoint2dFromFfi(Pointer<Void> handle) {
  final result = List<Point2D>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCorePoint2dIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCorePoint2dFromFfi(_elementHandle));
    } finally {
      sdkCorePoint2dReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCorePoint2dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCorePoint2dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCorePoint2dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_Point2D_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCorePoint2dToFfiNullable(List<Point2D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCorePoint2dToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCorePoint2dCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

List<Point2D>? heresdkMapviewCommonBindingslistofSdkCorePoint2dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCorePoint2dGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCorePoint2dFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCorePoint2dReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateToFfi(List<MapCameraUpdate> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcameraupdateToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateInsert(_result, _elementHandle);
    sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraUpdate> heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraUpdate>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcameraupdateFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraUpdate_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateToFfiNullable(List<MapCameraUpdate>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraUpdate>? heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryToFfi(List<MapContentCategory> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcontentcategoryToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryInsert(_result, _elementHandle);
    sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapContentCategory> heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryFromFfi(Pointer<Void> handle) {
  final result = List<MapContentCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcontentcategoryFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapContentCategory_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryToFfiNullable(List<MapContentCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

List<MapContentCategory>? heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dToFfi(List<MapMarker3D> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarker3dToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dInsert(_result, _elementHandle);
    sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker3D> heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker3D>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarker3dFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker3D_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dToFfiNullable(List<MapMarker3D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker3D>? heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(List<MapMarkerTextStylePlacement> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerTextstylePlacementToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert(_result, _elementHandle);
    sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerTextStylePlacement> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerTextStylePlacement>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerTextstylePlacementFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfiNullable(List<MapMarkerTextStylePlacement>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerTextStylePlacement>? heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeToFfi(List<MapMeasureRange> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmeasurerangeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeInsert(_result, _elementHandle);
    sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMeasureRange> heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeFromFfi(Pointer<Void> handle) {
  final result = List<MapMeasureRange>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmeasurerangeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMeasureRange_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeToFfiNullable(List<MapMeasureRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

List<MapMeasureRange>? heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkMapviewCommonBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? heresdkMapviewCommonBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkMapviewCommonBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? heresdkMapviewCommonBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(List<MapSceneMapPickFilterContentType> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapsceneMappickfilterContenttypeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert(_result, _elementHandle);
    sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapSceneMapPickFilterContentType> heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(Pointer<Void> handle) {
  final result = List<MapSceneMapPickFilterContentType>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapsceneMappickfilterContenttypeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfiNullable(List<MapSceneMapPickFilterContentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

List<MapSceneMapPickFilterContentType>? heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(List<DataAttributeValue> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceDataattributevalueToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueInsert(_result, _elementHandle);
    sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<DataAttributeValue> heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(Pointer<Void> handle) {
  final result = List<DataAttributeValue>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceDataattributevalueFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueToFfiNullable(List<DataAttributeValue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

List<DataAttributeValue>? heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataToFfi(List<LineData> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceLinedataToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataInsert(_result, _elementHandle);
    sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LineData> heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataFromFfi(Pointer<Void> handle) {
  final result = List<LineData>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceLinedataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_LineData_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataToFfiNullable(List<LineData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

List<LineData>? heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataToFfi(List<PointData> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePointdataToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PointData> heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataFromFfi(Pointer<Void> handle) {
  final result = List<PointData>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePointdataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PointData_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataToFfiNullable(List<PointData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

List<PointData>? heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataToFfi(List<PolygonData> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePolygondataToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PolygonData> heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataFromFfi(Pointer<Void> handle) {
  final result = List<PolygonData>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePolygondataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_datasource_PolygonData_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataToFfiNullable(List<PolygonData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

List<PolygonData>? heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_put'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkMapviewCommonBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkMapviewCommonBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkMapviewCommonBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkMapviewCommonBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_create_handle'));
final _heresdkMapviewCommonBindingsmapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_release_handle'));
final _heresdkMapviewCommonBindingsmapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_put'));
final _heresdkMapviewCommonBindingsmapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_iterator'));
final _heresdkMapviewCommonBindingsmapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofStringToStringToFfi(Map<String, String> value) {
  final _result = _heresdkMapviewCommonBindingsmapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkMapviewCommonBindingsmapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> heresdkMapviewCommonBindingsmapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofStringToStringIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewCommonBindingsmapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofStringToStringReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_String_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofStringToStringToFfiNullable(Map<String, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofStringToStringToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofStringToStringCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String>? heresdkMapviewCommonBindingsmapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofStringToStringGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofStringToStringFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofStringToStringReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_create_handle'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_release_handle'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_put'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_iterator'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = heresdkMapviewCommonBindingslistofStringToFfi(entry.value);
    _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        heresdkMapviewCommonBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_heresdk_mapview_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofStringToHeresdkMapviewCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystatePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Uint32),
    void Function(Pointer<Void>, Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_put'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateToFfi(Map<String, VisibilityState> value) {
  final _result = _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkMapviewVisibilitystateToFfi(entry.value);
    _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystatePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VisibilityState> heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(Pointer<Void> handle) {
  final result = Map<String, VisibilityState>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkMapviewVisibilitystateFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_String_to_sdk_mapview_VisibilityState_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateToFfiNullable(Map<String, VisibilityState>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

Map<String, VisibilityState>? heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Double),
    void Function(Pointer<Void>, Pointer<Void>, double)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_put'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(Map<MapMeasure, double> value) {
  final _result = _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkMapviewMapmeasureToFfi(entry.key);
    final _valueHandle = (entry.value);
    _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoublePut(_result, _keyHandle, _valueHandle);
    sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
    
  }
  return _result;
}

Map<MapMeasure, double> heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<MapMeasure, double>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[sdkMapviewMapmeasureFromFfi(_keyHandle)] =
        (_valueHandle);
    } finally {
      sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
      
    }
    _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleToFfiNullable(Map<MapMeasure, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<MapMeasure, double>? heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//














































final _heresdkMapviewHarpBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_create_handle'));
final _heresdkMapviewHarpBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_release_handle'));
final _heresdkMapviewHarpBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_insert'));
final _heresdkMapviewHarpBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_iterator'));
final _heresdkMapviewHarpBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_iterator_increment'));
final _heresdkMapviewHarpBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkMapviewHarpBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkMapviewHarpBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkMapviewHarpBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofIntIterator(handle);
  while (_heresdkMapviewHarpBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkMapviewHarpBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofIntReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofIntToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofIntCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkMapviewHarpBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofIntGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofIntFromFfi(_handle);
  heresdkMapviewHarpBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofIntReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_create_handle'));
final _heresdkMapviewHarpBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_release_handle'));
final _heresdkMapviewHarpBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_insert'));
final _heresdkMapviewHarpBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_increment'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewHarpBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewHarpBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewHarpBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofLocaleIterator(handle);
  while (_heresdkMapviewHarpBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofLocaleReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofLocaleToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMapviewHarpBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofLocaleFromFfi(_handle);
  heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_create_handle'));
final _heresdkMapviewHarpBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_release_handle'));
final _heresdkMapviewHarpBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_insert'));
final _heresdkMapviewHarpBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator'));
final _heresdkMapviewHarpBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewHarpBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkMapviewHarpBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkMapviewHarpBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkMapviewHarpBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofStringIterator(handle);
  while (_heresdkMapviewHarpBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofStringToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkMapviewHarpBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofStringFromFfi(_handle);
  heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofHeresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkMapviewHarpBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkMapviewHarpBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_insert'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCorePickedplaceToFfi(List<PickedPlace> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCorePickedplaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCorePickedplaceToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCorePickedplaceInsert(_result, _elementHandle);
    sdkCorePickedplaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickedPlace> heresdkMapviewHarpBindingslistofSdkCorePickedplaceFromFfi(Pointer<Void> handle) {
  final result = List<PickedPlace>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCorePickedplaceFromFfi(_elementHandle));
    } finally {
      sdkCorePickedplaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCorePickedplaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCorePickedplaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_PickedPlace_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCorePickedplaceToFfiNullable(List<PickedPlace>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCorePickedplaceToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCorePickedplaceCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseFfiHandle(_handle);
  return result;
}

List<PickedPlace>? heresdkMapviewHarpBindingslistofSdkCorePickedplaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCorePickedplaceGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCorePickedplaceFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCorePickedplaceReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCorePoint2dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_insert'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCorePoint2dToFfi(List<Point2D> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCorePoint2dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCorePoint2dToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCorePoint2dInsert(_result, _elementHandle);
    sdkCorePoint2dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2D> heresdkMapviewHarpBindingslistofSdkCorePoint2dFromFfi(Pointer<Void> handle) {
  final result = List<Point2D>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCorePoint2dIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCorePoint2dFromFfi(_elementHandle));
    } finally {
      sdkCorePoint2dReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCorePoint2dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCorePoint2dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCorePoint2dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_Point2D_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCorePoint2dToFfiNullable(List<Point2D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCorePoint2dToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCorePoint2dCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

List<Point2D>? heresdkMapviewHarpBindingslistofSdkCorePoint2dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCorePoint2dGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCorePoint2dFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCorePoint2dReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateToFfi(List<MapCameraUpdate> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcameraupdateToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateInsert(_result, _elementHandle);
    sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraUpdate> heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraUpdate>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcameraupdateFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcameraupdateReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraUpdate_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateToFfiNullable(List<MapCameraUpdate>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraUpdate>? heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcameraupdateReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryToFfi(List<MapContentCategory> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcontentcategoryToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryInsert(_result, _elementHandle);
    sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapContentCategory> heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryFromFfi(Pointer<Void> handle) {
  final result = List<MapContentCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcontentcategoryFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcontentcategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapContentCategory_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryToFfiNullable(List<MapContentCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

List<MapContentCategory>? heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcontentcategoryReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dToFfi(List<MapMarker3D> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarker3dToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dInsert(_result, _elementHandle);
    sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker3D> heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker3D>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarker3dFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarker3dReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker3D_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dToFfiNullable(List<MapMarker3D>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker3D>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarker3dReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(List<MapMarkerTextStylePlacement> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerTextstylePlacementToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementInsert(_result, _elementHandle);
    sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerTextStylePlacement> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerTextStylePlacement>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerTextstylePlacementFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_TextStyle_Placement_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfiNullable(List<MapMarkerTextStylePlacement>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerTextStylePlacement>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerTextstylePlacementReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeToFfi(List<MapMeasureRange> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmeasurerangeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeInsert(_result, _elementHandle);
    sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMeasureRange> heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeFromFfi(Pointer<Void> handle) {
  final result = List<MapMeasureRange>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmeasurerangeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmeasurerangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMeasureRange_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeToFfiNullable(List<MapMeasureRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

List<MapMeasureRange>? heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmeasurerangeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorToFfi(List<MapObjectDescriptor> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapobjectdescriptorToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorInsert(_result, _elementHandle);
    sdkMapviewMapobjectdescriptorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapObjectDescriptor> heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorFromFfi(Pointer<Void> handle) {
  final result = List<MapObjectDescriptor>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapobjectdescriptorFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapobjectdescriptorReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapObjectDescriptor_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorToFfiNullable(List<MapObjectDescriptor>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseFfiHandle(_handle);
  return result;
}

List<MapObjectDescriptor>? heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapobjectdescriptorReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(List<MapSceneMapPickFilterContentType> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapsceneMappickfilterContenttypeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeInsert(_result, _elementHandle);
    sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapSceneMapPickFilterContentType> heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(Pointer<Void> handle) {
  final result = List<MapSceneMapPickFilterContentType>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapsceneMappickfilterContenttypeFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapScene_MapPickFilter_ContentType_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfiNullable(List<MapSceneMapPickFilterContentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

List<MapSceneMapPickFilterContentType>? heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapsceneMappickfilterContenttypeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultToFfi(List<PickTrafficIncidentResult> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapcontentresultTrafficincidentresultToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultInsert(_result, _elementHandle);
    sdkMapviewPickmapcontentresultTrafficincidentresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickTrafficIncidentResult> heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultFromFfi(Pointer<Void> handle) {
  final result = List<PickTrafficIncidentResult>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapcontentresultTrafficincidentresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapcontentresultTrafficincidentresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResult_TrafficIncidentResult_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultToFfiNullable(List<PickTrafficIncidentResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

List<PickTrafficIncidentResult>? heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultTrafficincidentresultReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(List<DataAttributeValue> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceDataattributevalueToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueInsert(_result, _elementHandle);
    sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<DataAttributeValue> heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(Pointer<Void> handle) {
  final result = List<DataAttributeValue>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceDataattributevalueFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_DataAttributeValue_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueToFfiNullable(List<DataAttributeValue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

List<DataAttributeValue>? heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceDataattributevalueReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataToFfi(List<LineData> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourceLinedataToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataInsert(_result, _elementHandle);
    sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LineData> heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataFromFfi(Pointer<Void> handle) {
  final result = List<LineData>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourceLinedataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourceLinedataReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_LineData_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataToFfiNullable(List<LineData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

List<LineData>? heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourceLinedataReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataToFfi(List<PointData> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePointdataToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PointData> heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataFromFfi(Pointer<Void> handle) {
  final result = List<PointData>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePointdataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePointdataReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PointData_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataToFfiNullable(List<PointData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

List<PointData>? heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePointdataReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataToFfi(List<PolygonData> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewDatasourcePolygondataToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataInsert(_result, _elementHandle);
    sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PolygonData> heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataFromFfi(Pointer<Void> handle) {
  final result = List<PolygonData>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewDatasourcePolygondataFromFfi(_elementHandle));
    } finally {
      sdkMapviewDatasourcePolygondataReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_datasource_PolygonData_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataToFfiNullable(List<PolygonData>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

List<PolygonData>? heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewDatasourcePolygondataReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_insert'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeToFfi(List<TrafficIncidentType> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidenttypeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeInsert(_result, _elementHandle);
    sdkTrafficTrafficincidenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentType> heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentType>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidenttypeFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidenttypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_traffic_TrafficIncidentType_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeToFfiNullable(List<TrafficIncidentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentType>? heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkTrafficTrafficincidenttypeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_put'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkMapviewHarpBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkMapviewHarpBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkMapviewHarpBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkMapviewHarpBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_create_handle'));
final _heresdkMapviewHarpBindingsmapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_release_handle'));
final _heresdkMapviewHarpBindingsmapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_put'));
final _heresdkMapviewHarpBindingsmapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_iterator'));
final _heresdkMapviewHarpBindingsmapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofStringToStringToFfi(Map<String, String> value) {
  final _result = _heresdkMapviewHarpBindingsmapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkMapviewHarpBindingsmapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> heresdkMapviewHarpBindingsmapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofStringToStringIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewHarpBindingsmapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofStringToStringReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_String_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofStringToStringToFfiNullable(Map<String, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofStringToStringToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofStringToStringCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String>? heresdkMapviewHarpBindingsmapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofStringToStringGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofStringToStringFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofStringToStringReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_create_handle'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_release_handle'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_put'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_iterator'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = heresdkMapviewHarpBindingslistofStringToFfi(entry.value);
    _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        heresdkMapviewHarpBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_heresdk_mapview_harp_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofStringToHeresdkMapviewHarpBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystatePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Uint32),
    void Function(Pointer<Void>, Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_put'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateToFfi(Map<String, VisibilityState> value) {
  final _result = _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkMapviewVisibilitystateToFfi(entry.value);
    _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystatePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VisibilityState> heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(Pointer<Void> handle) {
  final result = Map<String, VisibilityState>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkMapviewVisibilitystateFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkMapviewVisibilitystateReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_String_to_sdk_mapview_VisibilityState_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateToFfiNullable(Map<String, VisibilityState>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

Map<String, VisibilityState>? heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofStringToSdkMapviewVisibilitystateReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Double),
    void Function(Pointer<Void>, Pointer<Void>, double)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_put'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(Map<MapMeasure, double> value) {
  final _result = _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkMapviewMapmeasureToFfi(entry.key);
    final _valueHandle = (entry.value);
    _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoublePut(_result, _keyHandle, _valueHandle);
    sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
    
  }
  return _result;
}

Map<MapMeasure, double> heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<MapMeasure, double>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[sdkMapviewMapmeasureFromFfi(_keyHandle)] =
        (_valueHandle);
    } finally {
      sdkMapviewMapmeasureReleaseFfiHandle(_keyHandle);
      
    }
    _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_mapview_MapMeasure_to_Double_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleToFfiNullable(Map<MapMeasure, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<MapMeasure, double>? heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofSdkMapviewMapmeasureToDoubleReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//






























































final _heresdkRoutingBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_Int_create_handle'));
final _heresdkRoutingBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_release_handle'));
final _heresdkRoutingBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_insert'));
final _heresdkRoutingBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator'));
final _heresdkRoutingBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofIntIterator(handle);
  while (_heresdkRoutingBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofIntToFfi(value);
  final result = _heresdkRoutingBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofIntFromFfi(_handle);
  heresdkRoutingBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_insert'));
final _heresdkRoutingBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator'));
final _heresdkRoutingBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_String_create_handle'));
final _heresdkRoutingBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_String_release_handle'));
final _heresdkRoutingBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_String_insert'));
final _heresdkRoutingBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_String_iterator'));
final _heresdkRoutingBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_String_iterator_release_handle'));
final _heresdkRoutingBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_String_iterator_is_valid'));
final _heresdkRoutingBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_String_iterator_increment'));
final _heresdkRoutingBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkRoutingBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkRoutingBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkRoutingBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofStringIterator(handle);
  while (_heresdkRoutingBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofStringReleaseHandle(handle);

final _heresdkRoutingBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_String_create_handle_nullable'));
final _heresdkRoutingBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_String_release_handle_nullable'));
final _heresdkRoutingBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofStringToFfi(value);
  final result = _heresdkRoutingBindingslistofStringCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkRoutingBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofStringGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofStringFromFfi(_handle);
  heresdkRoutingBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofStringReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofHeresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocorridorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocorridorToFfi(List<GeoCorridor> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeocorridorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocorridorToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeocorridorInsert(_result, _elementHandle);
    sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCorridor> heresdkRoutingBindingslistofSdkCoreGeocorridorFromFfi(Pointer<Void> handle) {
  final result = List<GeoCorridor>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeocorridorIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocorridorFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeocorridorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocorridorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocorridorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCorridor_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocorridorToFfiNullable(List<GeoCorridor>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeocorridorToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeocorridorCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

List<GeoCorridor>? heresdkRoutingBindingslistofSdkCoreGeocorridorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeocorridorGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeocorridorFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeocorridorReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreLocationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_insert'));
final _heresdkRoutingBindingslistofSdkCoreLocationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocationToFfi(List<Location> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreLocationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocationToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreLocationInsert(_result, _elementHandle);
    sdkCoreLocationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Location> heresdkRoutingBindingslistofSdkCoreLocationFromFfi(Pointer<Void> handle) {
  final result = List<Location>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreLocationIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreLocationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreLocationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocationFromFfi(_elementHandle));
    } finally {
      sdkCoreLocationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreLocationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreLocationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreLocationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocationToFfiNullable(List<Location>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreLocationToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreLocationCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

List<Location>? heresdkRoutingBindingslistofSdkCoreLocationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreLocationGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreLocationFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreNameidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreNameidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreNameidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_insert'));
final _heresdkRoutingBindingslistofSdkCoreNameidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_iterator'));
final _heresdkRoutingBindingslistofSdkCoreNameidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreNameidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreNameidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreNameidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreNameidToFfi(List<NameID> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreNameidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNameidToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreNameidInsert(_result, _elementHandle);
    sdkCoreNameidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NameID> heresdkRoutingBindingslistofSdkCoreNameidFromFfi(Pointer<Void> handle) {
  final result = List<NameID>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreNameidIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreNameidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreNameidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNameidFromFfi(_elementHandle));
    } finally {
      sdkCoreNameidReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreNameidIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreNameidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreNameidReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreNameidReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreNameidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreNameidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreNameidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NameID_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreNameidToFfiNullable(List<NameID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreNameidToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreNameidCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

List<NameID>? heresdkRoutingBindingslistofSdkCoreNameidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreNameidGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreNameidFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreNameidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreNameidReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkRoutingBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkRoutingBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkRoutingBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkRoutingBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAccessattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAccessattributesToFfi(List<AccessAttributes> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAccessattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAccessattributesToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAccessattributesInsert(_result, _elementHandle);
    sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AccessAttributes> heresdkRoutingBindingslistofSdkRoutingAccessattributesFromFfi(Pointer<Void> handle) {
  final result = List<AccessAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAccessattributesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAccessattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAccessattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAccessattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AccessAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAccessattributesToFfiNullable(List<AccessAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAccessattributesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAccessattributesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

List<AccessAttributes>? heresdkRoutingBindingslistofSdkRoutingAccessattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAccessattributesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAccessattributesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAccessattributesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(List<AvoidBoundingBoxAreaOptions> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidboundingboxareaoptionsToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidBoundingBoxAreaOptions> heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidBoundingBoxAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidboundingboxareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfiNullable(List<AvoidBoundingBoxAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidBoundingBoxAreaOptions>? heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(List<AvoidCorridorAreaOptions> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidcorridorareaoptionsToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidCorridorAreaOptions> heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidCorridorAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidcorridorareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfiNullable(List<AvoidCorridorAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidCorridorAreaOptions>? heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(List<AvoidPolygonAreaOptions> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidpolygonareaoptionsToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidPolygonAreaOptions> heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidPolygonAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidpolygonareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfiNullable(List<AvoidPolygonAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidPolygonAreaOptions>? heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRoutingBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_insert'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentToFfi(List<MaxSpeedOnSegment> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingMaxspeedonsegmentToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentInsert(_result, _elementHandle);
    sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MaxSpeedOnSegment> heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(Pointer<Void> handle) {
  final result = List<MaxSpeedOnSegment>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingMaxspeedonsegmentFromFfi(_elementHandle));
    } finally {
      sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_MaxSpeedOnSegment_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentToFfiNullable(List<MaxSpeedOnSegment>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

List<MaxSpeedOnSegment>? heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointToFfi(List<PassThroughWaypoint> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPassthroughwaypointToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointInsert(_result, _elementHandle);
    sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PassThroughWaypoint> heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointFromFfi(Pointer<Void> handle) {
  final result = List<PassThroughWaypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPassthroughwaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PassThroughWaypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointToFfiNullable(List<PassThroughWaypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

List<PassThroughWaypoint>? heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingToFfi(List<RouteRailwayCrossing> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouterailwaycrossingToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingInsert(_result, _elementHandle);
    sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RouteRailwayCrossing> heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingFromFfi(Pointer<Void> handle) {
  final result = List<RouteRailwayCrossing>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouterailwaycrossingFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteRailwayCrossing_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingToFfiNullable(List<RouteRailwayCrossing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

List<RouteRailwayCrossing>? heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoutestopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoutestopToFfi(List<RouteStop> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRoutestopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoutestopToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRoutestopInsert(_result, _elementHandle);
    sdkRoutingRoutestopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RouteStop> heresdkRoutingBindingslistofSdkRoutingRoutestopFromFfi(Pointer<Void> handle) {
  final result = List<RouteStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRoutestopIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoutestopFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoutestopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRoutestopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoutestopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoutestopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RouteStop_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoutestopToFfiNullable(List<RouteStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRoutestopToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRoutestopCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseFfiHandle(_handle);
  return result;
}

List<RouteStop>? heresdkRoutingBindingslistofSdkRoutingRoutestopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRoutestopGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRoutestopFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRoutestopReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSignpostlabelToFfi(List<SignpostLabel> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSignpostlabelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSignpostlabelToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSignpostlabelInsert(_result, _elementHandle);
    sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SignpostLabel> heresdkRoutingBindingslistofSdkRoutingSignpostlabelFromFfi(Pointer<Void> handle) {
  final result = List<SignpostLabel>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSignpostlabelFromFfi(_elementHandle));
    } finally {
      sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSignpostlabelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SignpostLabel_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSignpostlabelToFfiNullable(List<SignpostLabel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSignpostlabelToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSignpostlabelCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

List<SignpostLabel>? heresdkRoutingBindingslistofSdkRoutingSignpostlabelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSignpostlabelGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSignpostlabelFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingStreetattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_insert'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingStreetattributesToFfi(List<StreetAttributes> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingStreetattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingStreetattributesToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingStreetattributesInsert(_result, _elementHandle);
    sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<StreetAttributes> heresdkRoutingBindingslistofSdkRoutingStreetattributesFromFfi(Pointer<Void> handle) {
  final result = List<StreetAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingStreetattributesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingStreetattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingStreetattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingStreetattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_StreetAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingStreetattributesToFfiNullable(List<StreetAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingStreetattributesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingStreetattributesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

List<StreetAttributes>? heresdkRoutingBindingslistofSdkRoutingStreetattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingStreetattributesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingStreetattributesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingStreetattributesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficonsectionToFfi(List<TrafficOnSection> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonsectionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionInsert(_result, _elementHandle);
    sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSection> heresdkRoutingBindingslistofSdkRoutingTrafficonsectionFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSection>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonsectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSection_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficonsectionToFfiNullable(List<TrafficOnSection>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTrafficonsectionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSection>? heresdkRoutingBindingslistofSdkRoutingTrafficonsectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTrafficonsectionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficonspanToFfi(List<TrafficOnSpan> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTrafficonspanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonspanToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTrafficonspanInsert(_result, _elementHandle);
    sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSpan> heresdkRoutingBindingslistofSdkRoutingTrafficonspanFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSpan>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonspanFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficonspanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficOnSpan_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficonspanToFfiNullable(List<TrafficOnSpan>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTrafficonspanToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTrafficonspanCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSpan>? heresdkRoutingBindingslistofSdkRoutingTrafficonspanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTrafficonspanGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTrafficonspanFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionToFfi(List<ViolatedRestriction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingViolatedrestrictionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionInsert(_result, _elementHandle);
    sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ViolatedRestriction> heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionFromFfi(Pointer<Void> handle) {
  final result = List<ViolatedRestriction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingViolatedrestrictionFromFfi(_elementHandle));
    } finally {
      sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ViolatedRestriction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionToFfiNullable(List<ViolatedRestriction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

List<ViolatedRestriction>? heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingWalkattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_insert'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWalkattributesToFfi(List<WalkAttributes> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingWalkattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWalkattributesToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingWalkattributesInsert(_result, _elementHandle);
    sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WalkAttributes> heresdkRoutingBindingslistofSdkRoutingWalkattributesFromFfi(Pointer<Void> handle) {
  final result = List<WalkAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingWalkattributesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWalkattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingWalkattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWalkattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_WalkAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWalkattributesToFfiNullable(List<WalkAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingWalkattributesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingWalkattributesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

List<WalkAttributes>? heresdkRoutingBindingslistofSdkRoutingWalkattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingWalkattributesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingWalkattributesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingWalkattributesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_create_handle'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_release_handle'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_insert'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_iterator'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_iterator_increment'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkTransportTruckroadtypeToFfi(List<TruckRoadType> value) {
  final _result = _heresdkRoutingBindingslistofSdkTransportTruckroadtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportTruckroadtypeToFfi(element);
    _heresdkRoutingBindingslistofSdkTransportTruckroadtypeInsert(_result, _elementHandle);
    sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRoadType> heresdkRoutingBindingslistofSdkTransportTruckroadtypeFromFfi(Pointer<Void> handle) {
  final result = List<TruckRoadType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportTruckroadtypeFromFfi(_elementHandle));
    } finally {
      sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkTransportTruckroadtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_TruckRoadType_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkTransportTruckroadtypeToFfiNullable(List<TruckRoadType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkTransportTruckroadtypeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkTransportTruckroadtypeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

List<TruckRoadType>? heresdkRoutingBindingslistofSdkTransportTruckroadtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkTransportTruckroadtypeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkTransportTruckroadtypeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



























































final _heresdkRoutingCommonBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_create_handle'));
final _heresdkRoutingCommonBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_release_handle'));
final _heresdkRoutingCommonBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_insert'));
final _heresdkRoutingCommonBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator'));
final _heresdkRoutingCommonBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingCommonBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingCommonBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingCommonBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingCommonBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofIntIterator(handle);
  while (_heresdkRoutingCommonBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingCommonBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofIntToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingCommonBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofIntFromFfi(_handle);
  heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_insert'));
final _heresdkRoutingCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_String_create_handle'));
final _heresdkRoutingCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_String_release_handle'));
final _heresdkRoutingCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_String_insert'));
final _heresdkRoutingCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_String_iterator'));
final _heresdkRoutingCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_String_iterator_increment'));
final _heresdkRoutingCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkRoutingCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkRoutingCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkRoutingCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofStringIterator(handle);
  while (_heresdkRoutingCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofStringReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofStringToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkRoutingCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofStringFromFfi(_handle);
  heresdkRoutingCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofHeresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocorridorToFfi(List<GeoCorridor> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocorridorToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorInsert(_result, _elementHandle);
    sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCorridor> heresdkRoutingCommonBindingslistofSdkCoreGeocorridorFromFfi(Pointer<Void> handle) {
  final result = List<GeoCorridor>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocorridorFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCorridor_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocorridorToFfiNullable(List<GeoCorridor>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeocorridorToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

List<GeoCorridor>? heresdkRoutingCommonBindingslistofSdkCoreGeocorridorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeocorridorFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeocorridorReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingCommonBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingCommonBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreNameidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreNameidToFfi(List<NameID> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreNameidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNameidToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreNameidInsert(_result, _elementHandle);
    sdkCoreNameidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NameID> heresdkRoutingCommonBindingslistofSdkCoreNameidFromFfi(Pointer<Void> handle) {
  final result = List<NameID>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreNameidIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNameidFromFfi(_elementHandle));
    } finally {
      sdkCoreNameidReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreNameidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreNameidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreNameidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NameID_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreNameidToFfiNullable(List<NameID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreNameidToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreNameidCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

List<NameID>? heresdkRoutingCommonBindingslistofSdkCoreNameidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreNameidGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreNameidFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreNameidReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesToFfi(List<AccessAttributes> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAccessattributesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesInsert(_result, _elementHandle);
    sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AccessAttributes> heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesFromFfi(Pointer<Void> handle) {
  final result = List<AccessAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAccessattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AccessAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesToFfiNullable(List<AccessAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

List<AccessAttributes>? heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAccessattributesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(List<AvoidBoundingBoxAreaOptions> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidboundingboxareaoptionsToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidBoundingBoxAreaOptions> heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidBoundingBoxAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidboundingboxareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfiNullable(List<AvoidBoundingBoxAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidBoundingBoxAreaOptions>? heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(List<AvoidCorridorAreaOptions> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidcorridorareaoptionsToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidCorridorAreaOptions> heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidCorridorAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidcorridorareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfiNullable(List<AvoidCorridorAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidCorridorAreaOptions>? heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(List<AvoidPolygonAreaOptions> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidpolygonareaoptionsToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidPolygonAreaOptions> heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidPolygonAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidpolygonareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfiNullable(List<AvoidPolygonAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidPolygonAreaOptions>? heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentToFfi(List<MaxSpeedOnSegment> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingMaxspeedonsegmentToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentInsert(_result, _elementHandle);
    sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MaxSpeedOnSegment> heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(Pointer<Void> handle) {
  final result = List<MaxSpeedOnSegment>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingMaxspeedonsegmentFromFfi(_elementHandle));
    } finally {
      sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_MaxSpeedOnSegment_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentToFfiNullable(List<MaxSpeedOnSegment>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

List<MaxSpeedOnSegment>? heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointToFfi(List<PassThroughWaypoint> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPassthroughwaypointToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointInsert(_result, _elementHandle);
    sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PassThroughWaypoint> heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointFromFfi(Pointer<Void> handle) {
  final result = List<PassThroughWaypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPassthroughwaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PassThroughWaypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointToFfiNullable(List<PassThroughWaypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

List<PassThroughWaypoint>? heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingToFfi(List<RouteRailwayCrossing> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouterailwaycrossingToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingInsert(_result, _elementHandle);
    sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RouteRailwayCrossing> heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingFromFfi(Pointer<Void> handle) {
  final result = List<RouteRailwayCrossing>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouterailwaycrossingFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RouteRailwayCrossing_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingToFfiNullable(List<RouteRailwayCrossing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

List<RouteRailwayCrossing>? heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelToFfi(List<SignpostLabel> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSignpostlabelToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelInsert(_result, _elementHandle);
    sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SignpostLabel> heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelFromFfi(Pointer<Void> handle) {
  final result = List<SignpostLabel>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSignpostlabelFromFfi(_elementHandle));
    } finally {
      sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SignpostLabel_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelToFfiNullable(List<SignpostLabel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

List<SignpostLabel>? heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesToFfi(List<StreetAttributes> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingStreetattributesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesInsert(_result, _elementHandle);
    sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<StreetAttributes> heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesFromFfi(Pointer<Void> handle) {
  final result = List<StreetAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingStreetattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_StreetAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesToFfiNullable(List<StreetAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

List<StreetAttributes>? heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingStreetattributesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionToFfi(List<TrafficOnSection> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonsectionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionInsert(_result, _elementHandle);
    sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSection> heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSection>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonsectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSection_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionToFfiNullable(List<TrafficOnSection>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSection>? heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanToFfi(List<TrafficOnSpan> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonspanToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanInsert(_result, _elementHandle);
    sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSpan> heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSpan>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonspanFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficOnSpan_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanToFfiNullable(List<TrafficOnSpan>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSpan>? heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionToFfi(List<ViolatedRestriction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingViolatedrestrictionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionInsert(_result, _elementHandle);
    sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ViolatedRestriction> heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionFromFfi(Pointer<Void> handle) {
  final result = List<ViolatedRestriction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingViolatedrestrictionFromFfi(_elementHandle));
    } finally {
      sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ViolatedRestriction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionToFfiNullable(List<ViolatedRestriction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

List<ViolatedRestriction>? heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesToFfi(List<WalkAttributes> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWalkattributesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesInsert(_result, _elementHandle);
    sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WalkAttributes> heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesFromFfi(Pointer<Void> handle) {
  final result = List<WalkAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWalkattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_WalkAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesToFfiNullable(List<WalkAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

List<WalkAttributes>? heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingWalkattributesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_insert'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_iterator'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeToFfi(List<TruckRoadType> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportTruckroadtypeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeInsert(_result, _elementHandle);
    sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRoadType> heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeFromFfi(Pointer<Void> handle) {
  final result = List<TruckRoadType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportTruckroadtypeFromFfi(_elementHandle));
    } finally {
      sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_TruckRoadType_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeToFfiNullable(List<TruckRoadType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

List<TruckRoadType>? heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingCommonBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingCommonBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//




























































final _heresdkRoutingIsolineBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_create_handle'));
final _heresdkRoutingIsolineBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_release_handle'));
final _heresdkRoutingIsolineBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_insert'));
final _heresdkRoutingIsolineBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator'));
final _heresdkRoutingIsolineBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingIsolineBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingIsolineBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingIsolineBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofIntIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingIsolineBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofIntToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingIsolineBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofIntFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_insert'));
final _heresdkRoutingIsolineBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingIsolineBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingIsolineBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingIsolineBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingIsolineBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_String_create_handle'));
final _heresdkRoutingIsolineBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_String_release_handle'));
final _heresdkRoutingIsolineBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_String_insert'));
final _heresdkRoutingIsolineBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_String_iterator'));
final _heresdkRoutingIsolineBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_String_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_String_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_String_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkRoutingIsolineBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkRoutingIsolineBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkRoutingIsolineBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofStringIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofStringReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_String_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_String_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofStringToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofStringCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkRoutingIsolineBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofStringGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofStringFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofStringReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofHeresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorToFfi(List<GeoCorridor> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocorridorToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorInsert(_result, _elementHandle);
    sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCorridor> heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorFromFfi(Pointer<Void> handle) {
  final result = List<GeoCorridor>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocorridorFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCorridor_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorToFfiNullable(List<GeoCorridor>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

List<GeoCorridor>? heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocorridorReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreNameidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreNameidToFfi(List<NameID> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreNameidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNameidToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreNameidInsert(_result, _elementHandle);
    sdkCoreNameidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NameID> heresdkRoutingIsolineBindingslistofSdkCoreNameidFromFfi(Pointer<Void> handle) {
  final result = List<NameID>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreNameidIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNameidFromFfi(_elementHandle));
    } finally {
      sdkCoreNameidReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreNameidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreNameidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNameidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NameID_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreNameidToFfiNullable(List<NameID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreNameidToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreNameidCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

List<NameID>? heresdkRoutingIsolineBindingslistofSdkCoreNameidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreNameidGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreNameidFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreNameidReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesToFfi(List<AccessAttributes> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAccessattributesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesInsert(_result, _elementHandle);
    sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AccessAttributes> heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesFromFfi(Pointer<Void> handle) {
  final result = List<AccessAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAccessattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AccessAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesToFfiNullable(List<AccessAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

List<AccessAttributes>? heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAccessattributesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(List<AvoidBoundingBoxAreaOptions> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidboundingboxareaoptionsToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidBoundingBoxAreaOptions> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidBoundingBoxAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidboundingboxareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfiNullable(List<AvoidBoundingBoxAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidBoundingBoxAreaOptions>? heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(List<AvoidCorridorAreaOptions> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidcorridorareaoptionsToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidCorridorAreaOptions> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidCorridorAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidcorridorareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfiNullable(List<AvoidCorridorAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidCorridorAreaOptions>? heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(List<AvoidPolygonAreaOptions> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidpolygonareaoptionsToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidPolygonAreaOptions> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidPolygonAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidpolygonareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfiNullable(List<AvoidPolygonAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidPolygonAreaOptions>? heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentToFfi(List<MaxSpeedOnSegment> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingMaxspeedonsegmentToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentInsert(_result, _elementHandle);
    sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MaxSpeedOnSegment> heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(Pointer<Void> handle) {
  final result = List<MaxSpeedOnSegment>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingMaxspeedonsegmentFromFfi(_elementHandle));
    } finally {
      sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_MaxSpeedOnSegment_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentToFfiNullable(List<MaxSpeedOnSegment>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

List<MaxSpeedOnSegment>? heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointToFfi(List<PassThroughWaypoint> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPassthroughwaypointToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointInsert(_result, _elementHandle);
    sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PassThroughWaypoint> heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointFromFfi(Pointer<Void> handle) {
  final result = List<PassThroughWaypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPassthroughwaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PassThroughWaypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointToFfiNullable(List<PassThroughWaypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

List<PassThroughWaypoint>? heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingToFfi(List<RouteRailwayCrossing> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouterailwaycrossingToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingInsert(_result, _elementHandle);
    sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RouteRailwayCrossing> heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingFromFfi(Pointer<Void> handle) {
  final result = List<RouteRailwayCrossing>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouterailwaycrossingFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RouteRailwayCrossing_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingToFfiNullable(List<RouteRailwayCrossing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

List<RouteRailwayCrossing>? heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelToFfi(List<SignpostLabel> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSignpostlabelToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelInsert(_result, _elementHandle);
    sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SignpostLabel> heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelFromFfi(Pointer<Void> handle) {
  final result = List<SignpostLabel>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSignpostlabelFromFfi(_elementHandle));
    } finally {
      sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SignpostLabel_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelToFfiNullable(List<SignpostLabel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

List<SignpostLabel>? heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesToFfi(List<StreetAttributes> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingStreetattributesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesInsert(_result, _elementHandle);
    sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<StreetAttributes> heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesFromFfi(Pointer<Void> handle) {
  final result = List<StreetAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingStreetattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_StreetAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesToFfiNullable(List<StreetAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

List<StreetAttributes>? heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingStreetattributesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionToFfi(List<TrafficOnSection> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonsectionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionInsert(_result, _elementHandle);
    sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSection> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSection>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonsectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSection_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionToFfiNullable(List<TrafficOnSection>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSection>? heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanToFfi(List<TrafficOnSpan> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonspanToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanInsert(_result, _elementHandle);
    sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSpan> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSpan>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonspanFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficOnSpan_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanToFfiNullable(List<TrafficOnSpan>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSpan>? heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionToFfi(List<ViolatedRestriction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingViolatedrestrictionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionInsert(_result, _elementHandle);
    sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ViolatedRestriction> heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionFromFfi(Pointer<Void> handle) {
  final result = List<ViolatedRestriction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingViolatedrestrictionFromFfi(_elementHandle));
    } finally {
      sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ViolatedRestriction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionToFfiNullable(List<ViolatedRestriction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

List<ViolatedRestriction>? heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesToFfi(List<WalkAttributes> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWalkattributesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesInsert(_result, _elementHandle);
    sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WalkAttributes> heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesFromFfi(Pointer<Void> handle) {
  final result = List<WalkAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWalkattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_WalkAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesToFfiNullable(List<WalkAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

List<WalkAttributes>? heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingWalkattributesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_insert'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeToFfi(List<TruckRoadType> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportTruckroadtypeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeInsert(_result, _elementHandle);
    sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRoadType> heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeFromFfi(Pointer<Void> handle) {
  final result = List<TruckRoadType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportTruckroadtypeFromFfi(_elementHandle));
    } finally {
      sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_TruckRoadType_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeToFfiNullable(List<TruckRoadType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

List<TruckRoadType>? heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



























































final _heresdkRoutingTransitBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_create_handle'));
final _heresdkRoutingTransitBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_release_handle'));
final _heresdkRoutingTransitBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_insert'));
final _heresdkRoutingTransitBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator'));
final _heresdkRoutingTransitBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingTransitBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingTransitBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingTransitBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingTransitBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofIntIterator(handle);
  while (_heresdkRoutingTransitBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingTransitBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofIntToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingTransitBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofIntFromFfi(_handle);
  heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingTransitBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingTransitBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_insert'));
final _heresdkRoutingTransitBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingTransitBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingTransitBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingTransitBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingTransitBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingTransitBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_String_create_handle'));
final _heresdkRoutingTransitBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_String_release_handle'));
final _heresdkRoutingTransitBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_String_insert'));
final _heresdkRoutingTransitBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_String_iterator'));
final _heresdkRoutingTransitBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_String_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_String_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_String_iterator_increment'));
final _heresdkRoutingTransitBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkRoutingTransitBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkRoutingTransitBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkRoutingTransitBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofStringIterator(handle);
  while (_heresdkRoutingTransitBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofStringReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_String_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_String_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofStringToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofStringCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkRoutingTransitBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofStringGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofStringFromFfi(_handle);
  heresdkRoutingTransitBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofStringReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofHeresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocorridorToFfi(List<GeoCorridor> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocorridorToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorInsert(_result, _elementHandle);
    sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCorridor> heresdkRoutingTransitBindingslistofSdkCoreGeocorridorFromFfi(Pointer<Void> handle) {
  final result = List<GeoCorridor>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocorridorFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocorridorReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCorridor_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocorridorToFfiNullable(List<GeoCorridor>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeocorridorToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

List<GeoCorridor>? heresdkRoutingTransitBindingslistofSdkCoreGeocorridorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeocorridorFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeocorridorReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingTransitBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingTransitBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreNameidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreNameidToFfi(List<NameID> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreNameidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNameidToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreNameidInsert(_result, _elementHandle);
    sdkCoreNameidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NameID> heresdkRoutingTransitBindingslistofSdkCoreNameidFromFfi(Pointer<Void> handle) {
  final result = List<NameID>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreNameidIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNameidFromFfi(_elementHandle));
    } finally {
      sdkCoreNameidReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreNameidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreNameidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreNameidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NameID_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreNameidToFfiNullable(List<NameID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreNameidToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreNameidCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

List<NameID>? heresdkRoutingTransitBindingslistofSdkCoreNameidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreNameidGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreNameidFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreNameidReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesToFfi(List<AccessAttributes> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAccessattributesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesInsert(_result, _elementHandle);
    sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AccessAttributes> heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesFromFfi(Pointer<Void> handle) {
  final result = List<AccessAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAccessattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingAccessattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AccessAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesToFfiNullable(List<AccessAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

List<AccessAttributes>? heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAccessattributesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(List<AvoidBoundingBoxAreaOptions> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidboundingboxareaoptionsToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidBoundingBoxAreaOptions> heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidBoundingBoxAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidboundingboxareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidBoundingBoxAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfiNullable(List<AvoidBoundingBoxAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidBoundingBoxAreaOptions>? heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAvoidboundingboxareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(List<AvoidCorridorAreaOptions> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidcorridorareaoptionsToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidCorridorAreaOptions> heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidCorridorAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidcorridorareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidCorridorAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfiNullable(List<AvoidCorridorAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidCorridorAreaOptions>? heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAvoidcorridorareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(List<AvoidPolygonAreaOptions> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAvoidpolygonareaoptionsToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsInsert(_result, _elementHandle);
    sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<AvoidPolygonAreaOptions> heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(Pointer<Void> handle) {
  final result = List<AvoidPolygonAreaOptions>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAvoidpolygonareaoptionsFromFfi(_elementHandle));
    } finally {
      sdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_AvoidPolygonAreaOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfiNullable(List<AvoidPolygonAreaOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

List<AvoidPolygonAreaOptions>? heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAvoidpolygonareaoptionsReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentToFfi(List<MaxSpeedOnSegment> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingMaxspeedonsegmentToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentInsert(_result, _elementHandle);
    sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MaxSpeedOnSegment> heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(Pointer<Void> handle) {
  final result = List<MaxSpeedOnSegment>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingMaxspeedonsegmentFromFfi(_elementHandle));
    } finally {
      sdkRoutingMaxspeedonsegmentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_MaxSpeedOnSegment_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentToFfiNullable(List<MaxSpeedOnSegment>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

List<MaxSpeedOnSegment>? heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingMaxspeedonsegmentReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointToFfi(List<PassThroughWaypoint> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPassthroughwaypointToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointInsert(_result, _elementHandle);
    sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PassThroughWaypoint> heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointFromFfi(Pointer<Void> handle) {
  final result = List<PassThroughWaypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPassthroughwaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingPassthroughwaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PassThroughWaypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointToFfiNullable(List<PassThroughWaypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

List<PassThroughWaypoint>? heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPassthroughwaypointReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingToFfi(List<RouteRailwayCrossing> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouterailwaycrossingToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingInsert(_result, _elementHandle);
    sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RouteRailwayCrossing> heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingFromFfi(Pointer<Void> handle) {
  final result = List<RouteRailwayCrossing>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouterailwaycrossingFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouterailwaycrossingReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RouteRailwayCrossing_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingToFfiNullable(List<RouteRailwayCrossing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

List<RouteRailwayCrossing>? heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRouterailwaycrossingReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelToFfi(List<SignpostLabel> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSignpostlabelToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelInsert(_result, _elementHandle);
    sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SignpostLabel> heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelFromFfi(Pointer<Void> handle) {
  final result = List<SignpostLabel>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSignpostlabelFromFfi(_elementHandle));
    } finally {
      sdkRoutingSignpostlabelReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SignpostLabel_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelToFfiNullable(List<SignpostLabel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

List<SignpostLabel>? heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSignpostlabelReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesToFfi(List<StreetAttributes> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingStreetattributesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesInsert(_result, _elementHandle);
    sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<StreetAttributes> heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesFromFfi(Pointer<Void> handle) {
  final result = List<StreetAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingStreetattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingStreetattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_StreetAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesToFfiNullable(List<StreetAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

List<StreetAttributes>? heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingStreetattributesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionToFfi(List<TrafficOnSection> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonsectionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionInsert(_result, _elementHandle);
    sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSection> heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSection>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonsectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonsectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSection_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionToFfiNullable(List<TrafficOnSection>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSection>? heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonsectionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanToFfi(List<TrafficOnSpan> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficonspanToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanInsert(_result, _elementHandle);
    sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficOnSpan> heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanFromFfi(Pointer<Void> handle) {
  final result = List<TrafficOnSpan>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficonspanFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficonspanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficOnSpan_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanToFfiNullable(List<TrafficOnSpan>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

List<TrafficOnSpan>? heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficonspanReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionToFfi(List<ViolatedRestriction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingViolatedrestrictionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionInsert(_result, _elementHandle);
    sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ViolatedRestriction> heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionFromFfi(Pointer<Void> handle) {
  final result = List<ViolatedRestriction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingViolatedrestrictionFromFfi(_elementHandle));
    } finally {
      sdkRoutingViolatedrestrictionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ViolatedRestriction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionToFfiNullable(List<ViolatedRestriction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

List<ViolatedRestriction>? heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingViolatedrestrictionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesToFfi(List<WalkAttributes> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWalkattributesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesInsert(_result, _elementHandle);
    sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WalkAttributes> heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesFromFfi(Pointer<Void> handle) {
  final result = List<WalkAttributes>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWalkattributesFromFfi(_elementHandle));
    } finally {
      sdkRoutingWalkattributesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_WalkAttributes_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesToFfiNullable(List<WalkAttributes>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

List<WalkAttributes>? heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingWalkattributesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_insert'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_iterator'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeToFfi(List<TruckRoadType> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportTruckroadtypeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeInsert(_result, _elementHandle);
    sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRoadType> heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeFromFfi(Pointer<Void> handle) {
  final result = List<TruckRoadType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportTruckroadtypeFromFfi(_elementHandle));
    } finally {
      sdkTransportTruckroadtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_TruckRoadType_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeToFfiNullable(List<TruckRoadType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

List<TruckRoadType>? heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkTransportTruckroadtypeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingTransitBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingTransitBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

















































final _heresdkSearchBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_Locale_create_handle'));
final _heresdkSearchBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_release_handle'));
final _heresdkSearchBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_insert'));
final _heresdkSearchBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator'));
final _heresdkSearchBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofLocaleIterator(handle);
  while (_heresdkSearchBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchBindingslistofLocaleFromFfi(_handle);
  heresdkSearchBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_String_create_handle'));
final _heresdkSearchBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_release_handle'));
final _heresdkSearchBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_insert'));
final _heresdkSearchBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator'));
final _heresdkSearchBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_increment'));
final _heresdkSearchBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofStringIterator(handle);
  while (_heresdkSearchBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofStringReleaseHandle(handle);

final _heresdkSearchBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofStringToFfi(value);
  final result = _heresdkSearchBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchBindingslistofStringFromFfi(_handle);
  heresdkSearchBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofHeresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreExternalidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_create_handle'));
final _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_release_handle'));
final _heresdkSearchBindingslistofSdkCoreExternalidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_insert'));
final _heresdkSearchBindingslistofSdkCoreExternalidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreExternalidToFfi(List<ExternalID> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreExternalidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreExternalidToFfi(element);
    _heresdkSearchBindingslistofSdkCoreExternalidInsert(_result, _elementHandle);
    sdkCoreExternalidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ExternalID> heresdkSearchBindingslistofSdkCoreExternalidFromFfi(Pointer<Void> handle) {
  final result = List<ExternalID>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreExternalidIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreExternalidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreExternalidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreExternalidFromFfi(_elementHandle));
    } finally {
      sdkCoreExternalidReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreExternalidIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreExternalidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreExternalidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreExternalidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreExternalidToFfiNullable(List<ExternalID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreExternalidToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreExternalidCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

List<ExternalID>? heresdkSearchBindingslistofSdkCoreExternalidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreExternalidGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreExternalidFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkSearchBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkSearchBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkSearchBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkSearchBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkSearchBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkSearchBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkSearchBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkSearchBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkSearchBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkSearchBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkSearchBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkSearchBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_insert'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderToFfi(List<EMobilityServiceProvider> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmobilityserviceproviderToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderInsert(_result, _elementHandle);
    sdkSearchEmobilityserviceproviderReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EMobilityServiceProvider> heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderFromFfi(Pointer<Void> handle) {
  final result = List<EMobilityServiceProvider>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmobilityserviceproviderFromFfi(_elementHandle));
    } finally {
      sdkSearchEmobilityserviceproviderReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EMobilityServiceProvider_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderToFfiNullable(List<EMobilityServiceProvider>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandle(_handle);
  return result;
}

List<EMobilityServiceProvider>? heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEmobilityserviceproviderReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvseconnectorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_insert'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvseconnectorToFfi(List<EVSEConnector> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvseconnectorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvseconnectorToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvseconnectorInsert(_result, _elementHandle);
    sdkSearchEvseconnectorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVSEConnector> heresdkSearchBindingslistofSdkSearchEvseconnectorFromFfi(Pointer<Void> handle) {
  final result = List<EVSEConnector>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvseconnectorIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvseconnectorFromFfi(_elementHandle));
    } finally {
      sdkSearchEvseconnectorReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvseconnectorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvseconnectorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvseconnectorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVSEConnector_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvseconnectorToFfiNullable(List<EVSEConnector>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvseconnectorToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvseconnectorCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseFfiHandle(_handle);
  return result;
}

List<EVSEConnector>? heresdkSearchBindingslistofSdkSearchEvseconnectorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvseconnectorGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvseconnectorFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvseconnectorReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvseCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvseReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvseInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_insert'));
final _heresdkSearchBindingslistofSdkSearchEvseIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvseIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvseIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvseIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvseIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvseToFfi(List<Evse> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvseCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvseToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvseInsert(_result, _elementHandle);
    sdkSearchEvseReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Evse> heresdkSearchBindingslistofSdkSearchEvseFromFfi(Pointer<Void> handle) {
  final result = List<Evse>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvseIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvseIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvseIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvseFromFfi(_elementHandle));
    } finally {
      sdkSearchEvseReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvseIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvseIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvseReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvseReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvseCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvseReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvseGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Evse_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvseToFfiNullable(List<Evse>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvseToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvseCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvseReleaseFfiHandle(_handle);
  return result;
}

List<Evse>? heresdkSearchBindingslistofSdkSearchEvseFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvseGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvseFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvseReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvseReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvseReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchFueladditiveCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_create_handle'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_release_handle'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_insert'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_iterator'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchFueladditiveToFfi(List<FuelAdditive> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchFueladditiveCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchFueladditiveToFfi(element);
    _heresdkSearchBindingslistofSdkSearchFueladditiveInsert(_result, _elementHandle);
    sdkSearchFueladditiveReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<FuelAdditive> heresdkSearchBindingslistofSdkSearchFueladditiveFromFfi(Pointer<Void> handle) {
  final result = List<FuelAdditive>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchFueladditiveIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchFueladditiveIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchFueladditiveFromFfi(_elementHandle));
    } finally {
      sdkSearchFueladditiveReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchFueladditiveIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchFueladditiveReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchFueladditiveReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchFueladditiveCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchFueladditiveGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_FuelAdditive_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchFueladditiveToFfiNullable(List<FuelAdditive>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchFueladditiveToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchFueladditiveCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchFueladditiveReleaseFfiHandle(_handle);
  return result;
}

List<FuelAdditive>? heresdkSearchBindingslistofSdkSearchFueladditiveFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchFueladditiveGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchFueladditiveFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchFueladditiveReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchFueladditiveReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchFueladditiveReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchGenericfuelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_create_handle'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_release_handle'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_insert'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_iterator'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchGenericfuelToFfi(List<GenericFuel> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchGenericfuelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchGenericfuelToFfi(element);
    _heresdkSearchBindingslistofSdkSearchGenericfuelInsert(_result, _elementHandle);
    sdkSearchGenericfuelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GenericFuel> heresdkSearchBindingslistofSdkSearchGenericfuelFromFfi(Pointer<Void> handle) {
  final result = List<GenericFuel>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchGenericfuelIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchGenericfuelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchGenericfuelFromFfi(_elementHandle));
    } finally {
      sdkSearchGenericfuelReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchGenericfuelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchGenericfuelReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchGenericfuelReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchGenericfuelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchGenericfuelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_GenericFuel_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchGenericfuelToFfiNullable(List<GenericFuel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchGenericfuelToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchGenericfuelCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchGenericfuelReleaseFfiHandle(_handle);
  return result;
}

List<GenericFuel>? heresdkSearchBindingslistofSdkSearchGenericfuelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchGenericfuelGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchGenericfuelFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchGenericfuelReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchGenericfuelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchGenericfuelReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlacechainCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacechainReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacechainInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_insert'));
final _heresdkSearchBindingslistofSdkSearchPlacechainIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlacechainIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacechainIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlacechainIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlacechainIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacechainToFfi(List<PlaceChain> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlacechainCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacechainToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlacechainInsert(_result, _elementHandle);
    sdkSearchPlacechainReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceChain> heresdkSearchBindingslistofSdkSearchPlacechainFromFfi(Pointer<Void> handle) {
  final result = List<PlaceChain>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlacechainIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlacechainIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlacechainIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacechainFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacechainReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlacechainIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlacechainIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacechainReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlacechainReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlacechainCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacechainReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacechainGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceChain_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacechainToFfiNullable(List<PlaceChain>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlacechainToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlacechainCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlacechainReleaseFfiHandle(_handle);
  return result;
}

List<PlaceChain>? heresdkSearchBindingslistofSdkSearchPlacechainFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlacechainGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlacechainFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlacechainReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacechainReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlacechainReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_insert'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacefoodtypeToFfi(List<PlaceFoodType> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlacefoodtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacefoodtypeToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlacefoodtypeInsert(_result, _elementHandle);
    sdkSearchPlacefoodtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceFoodType> heresdkSearchBindingslistofSdkSearchPlacefoodtypeFromFfi(Pointer<Void> handle) {
  final result = List<PlaceFoodType>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacefoodtypeFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacefoodtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlacefoodtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacefoodtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceFoodType_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacefoodtypeToFfiNullable(List<PlaceFoodType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlacefoodtypeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlacefoodtypeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandle(_handle);
  return result;
}

List<PlaceFoodType>? heresdkSearchBindingslistofSdkSearchPlacefoodtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlacefoodtypeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlacefoodtypeFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlacefoodtypeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchTruckfuelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_create_handle'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_release_handle'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_insert'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_iterator'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchTruckfuelToFfi(List<TruckFuel> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchTruckfuelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchTruckfuelToFfi(element);
    _heresdkSearchBindingslistofSdkSearchTruckfuelInsert(_result, _elementHandle);
    sdkSearchTruckfuelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckFuel> heresdkSearchBindingslistofSdkSearchTruckfuelFromFfi(Pointer<Void> handle) {
  final result = List<TruckFuel>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchTruckfuelIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchTruckfuelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchTruckfuelFromFfi(_elementHandle));
    } finally {
      sdkSearchTruckfuelReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchTruckfuelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchTruckfuelReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchTruckfuelReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchTruckfuelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchTruckfuelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_TruckFuel_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchTruckfuelToFfiNullable(List<TruckFuel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchTruckfuelToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchTruckfuelCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchTruckfuelReleaseFfiHandle(_handle);
  return result;
}

List<TruckFuel>? heresdkSearchBindingslistofSdkSearchTruckfuelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchTruckfuelGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchTruckfuelFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchTruckfuelReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchTruckfuelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchTruckfuelReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkTransportFueltypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_create_handle'));
final _heresdkSearchBindingslistofSdkTransportFueltypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_release_handle'));
final _heresdkSearchBindingslistofSdkTransportFueltypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_insert'));
final _heresdkSearchBindingslistofSdkTransportFueltypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_iterator'));
final _heresdkSearchBindingslistofSdkTransportFueltypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkTransportFueltypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkTransportFueltypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_iterator_increment'));
final _heresdkSearchBindingslistofSdkTransportFueltypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkTransportFueltypeToFfi(List<FuelType> value) {
  final _result = _heresdkSearchBindingslistofSdkTransportFueltypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportFueltypeToFfi(element);
    _heresdkSearchBindingslistofSdkTransportFueltypeInsert(_result, _elementHandle);
    sdkTransportFueltypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<FuelType> heresdkSearchBindingslistofSdkTransportFueltypeFromFfi(Pointer<Void> handle) {
  final result = List<FuelType>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkTransportFueltypeIterator(handle);
  while (_heresdkSearchBindingslistofSdkTransportFueltypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkTransportFueltypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportFueltypeFromFfi(_elementHandle));
    } finally {
      sdkTransportFueltypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkTransportFueltypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkTransportFueltypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkTransportFueltypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkTransportFueltypeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkTransportFueltypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkTransportFueltypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkTransportFueltypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_FuelType_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkTransportFueltypeToFfiNullable(List<FuelType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkTransportFueltypeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkTransportFueltypeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkTransportFueltypeReleaseFfiHandle(_handle);
  return result;
}

List<FuelType>? heresdkSearchBindingslistofSdkTransportFueltypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkTransportFueltypeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkTransportFueltypeFromFfi(_handle);
  heresdkSearchBindingslistofSdkTransportFueltypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkTransportFueltypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkTransportFueltypeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkSearchBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkSearchBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkSearchBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkSearchBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkSearchBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkTransportTruckfueltypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_create_handle'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_release_handle'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_insert'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_iterator'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_iterator_increment'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkTransportTruckfueltypeToFfi(List<TruckFuelType> value) {
  final _result = _heresdkSearchBindingslistofSdkTransportTruckfueltypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportTruckfueltypeToFfi(element);
    _heresdkSearchBindingslistofSdkTransportTruckfueltypeInsert(_result, _elementHandle);
    sdkTransportTruckfueltypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckFuelType> heresdkSearchBindingslistofSdkTransportTruckfueltypeFromFfi(Pointer<Void> handle) {
  final result = List<TruckFuelType>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkTransportTruckfueltypeIterator(handle);
  while (_heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportTruckfueltypeFromFfi(_elementHandle));
    } finally {
      sdkTransportTruckfueltypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkTransportTruckfueltypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkTransportTruckfueltypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkTransportTruckfueltypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_transport_TruckFuelType_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkTransportTruckfueltypeToFfiNullable(List<TruckFuelType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkTransportTruckfueltypeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkTransportTruckfueltypeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseFfiHandle(_handle);
  return result;
}

List<TruckFuelType>? heresdkSearchBindingslistofSdkTransportTruckfueltypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkTransportTruckfueltypeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkTransportTruckfueltypeFromFfi(_handle);
  heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkTransportTruckfueltypeReleaseHandleNullable(handle);

final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

















































final _heresdkSearchCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_create_handle'));
final _heresdkSearchCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_release_handle'));
final _heresdkSearchCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_insert'));
final _heresdkSearchCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator'));
final _heresdkSearchCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofLocaleIterator(handle);
  while (_heresdkSearchCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofLocaleFromFfi(_handle);
  heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_String_create_handle'));
final _heresdkSearchCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_release_handle'));
final _heresdkSearchCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_insert'));
final _heresdkSearchCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator'));
final _heresdkSearchCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_increment'));
final _heresdkSearchCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofStringIterator(handle);
  while (_heresdkSearchCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofStringReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofStringToFfi(value);
  final result = _heresdkSearchCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofStringFromFfi(_handle);
  heresdkSearchCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofHeresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreExternalidToFfi(List<ExternalID> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreExternalidToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreExternalidInsert(_result, _elementHandle);
    sdkCoreExternalidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ExternalID> heresdkSearchCommonBindingslistofSdkCoreExternalidFromFfi(Pointer<Void> handle) {
  final result = List<ExternalID>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreExternalidIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreExternalidFromFfi(_elementHandle));
    } finally {
      sdkCoreExternalidReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreExternalidToFfiNullable(List<ExternalID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreExternalidToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

List<ExternalID>? heresdkSearchCommonBindingslistofSdkCoreExternalidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreExternalidGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreExternalidFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkSearchCommonBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkSearchCommonBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkSearchCommonBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkSearchCommonBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchCommonBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchCommonBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderToFfi(List<EMobilityServiceProvider> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmobilityserviceproviderToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderInsert(_result, _elementHandle);
    sdkSearchEmobilityserviceproviderReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EMobilityServiceProvider> heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderFromFfi(Pointer<Void> handle) {
  final result = List<EMobilityServiceProvider>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmobilityserviceproviderFromFfi(_elementHandle));
    } finally {
      sdkSearchEmobilityserviceproviderReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EMobilityServiceProvider_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderToFfiNullable(List<EMobilityServiceProvider>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandle(_handle);
  return result;
}

List<EMobilityServiceProvider>? heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEmobilityserviceproviderReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvseconnectorToFfi(List<EVSEConnector> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvseconnectorToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorInsert(_result, _elementHandle);
    sdkSearchEvseconnectorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVSEConnector> heresdkSearchCommonBindingslistofSdkSearchEvseconnectorFromFfi(Pointer<Void> handle) {
  final result = List<EVSEConnector>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvseconnectorFromFfi(_elementHandle));
    } finally {
      sdkSearchEvseconnectorReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVSEConnector_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvseconnectorToFfiNullable(List<EVSEConnector>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvseconnectorToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseFfiHandle(_handle);
  return result;
}

List<EVSEConnector>? heresdkSearchCommonBindingslistofSdkSearchEvseconnectorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvseconnectorFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvseconnectorReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvseCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvseToFfi(List<Evse> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvseCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvseToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvseInsert(_result, _elementHandle);
    sdkSearchEvseReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Evse> heresdkSearchCommonBindingslistofSdkSearchEvseFromFfi(Pointer<Void> handle) {
  final result = List<Evse>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvseIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvseIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvseFromFfi(_elementHandle));
    } finally {
      sdkSearchEvseReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvseIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvseReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvseReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvseCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvseGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Evse_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvseToFfiNullable(List<Evse>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvseToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvseCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvseReleaseFfiHandle(_handle);
  return result;
}

List<Evse>? heresdkSearchCommonBindingslistofSdkSearchEvseFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvseGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvseFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvseReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvseReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvseReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchFueladditiveToFfi(List<FuelAdditive> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchFueladditiveCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchFueladditiveToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchFueladditiveInsert(_result, _elementHandle);
    sdkSearchFueladditiveReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<FuelAdditive> heresdkSearchCommonBindingslistofSdkSearchFueladditiveFromFfi(Pointer<Void> handle) {
  final result = List<FuelAdditive>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchFueladditiveFromFfi(_elementHandle));
    } finally {
      sdkSearchFueladditiveReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchFueladditiveIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchFueladditiveGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_FuelAdditive_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchFueladditiveToFfiNullable(List<FuelAdditive>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchFueladditiveToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchFueladditiveCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseFfiHandle(_handle);
  return result;
}

List<FuelAdditive>? heresdkSearchCommonBindingslistofSdkSearchFueladditiveFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchFueladditiveGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchFueladditiveFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchFueladditiveReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchGenericfuelToFfi(List<GenericFuel> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchGenericfuelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchGenericfuelToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchGenericfuelInsert(_result, _elementHandle);
    sdkSearchGenericfuelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GenericFuel> heresdkSearchCommonBindingslistofSdkSearchGenericfuelFromFfi(Pointer<Void> handle) {
  final result = List<GenericFuel>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchGenericfuelFromFfi(_elementHandle));
    } finally {
      sdkSearchGenericfuelReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchGenericfuelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchGenericfuelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_GenericFuel_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchGenericfuelToFfiNullable(List<GenericFuel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchGenericfuelToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchGenericfuelCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseFfiHandle(_handle);
  return result;
}

List<GenericFuel>? heresdkSearchCommonBindingslistofSdkSearchGenericfuelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchGenericfuelGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchGenericfuelFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchGenericfuelReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacechainCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacechainToFfi(List<PlaceChain> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlacechainCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacechainToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlacechainInsert(_result, _elementHandle);
    sdkSearchPlacechainReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceChain> heresdkSearchCommonBindingslistofSdkSearchPlacechainFromFfi(Pointer<Void> handle) {
  final result = List<PlaceChain>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacechainIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacechainFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacechainReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlacechainIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacechainCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacechainGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceChain_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacechainToFfiNullable(List<PlaceChain>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlacechainToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlacechainCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseFfiHandle(_handle);
  return result;
}

List<PlaceChain>? heresdkSearchCommonBindingslistofSdkSearchPlacechainFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlacechainGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlacechainFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlacechainReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeToFfi(List<PlaceFoodType> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacefoodtypeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeInsert(_result, _elementHandle);
    sdkSearchPlacefoodtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceFoodType> heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeFromFfi(Pointer<Void> handle) {
  final result = List<PlaceFoodType>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacefoodtypeFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacefoodtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceFoodType_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeToFfiNullable(List<PlaceFoodType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandle(_handle);
  return result;
}

List<PlaceFoodType>? heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlacefoodtypeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchTruckfuelToFfi(List<TruckFuel> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchTruckfuelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchTruckfuelToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchTruckfuelInsert(_result, _elementHandle);
    sdkSearchTruckfuelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckFuel> heresdkSearchCommonBindingslistofSdkSearchTruckfuelFromFfi(Pointer<Void> handle) {
  final result = List<TruckFuel>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchTruckfuelFromFfi(_elementHandle));
    } finally {
      sdkSearchTruckfuelReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchTruckfuelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchTruckfuelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_TruckFuel_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchTruckfuelToFfiNullable(List<TruckFuel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchTruckfuelToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchTruckfuelCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseFfiHandle(_handle);
  return result;
}

List<TruckFuel>? heresdkSearchCommonBindingslistofSdkSearchTruckfuelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchTruckfuelGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchTruckfuelFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchTruckfuelReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkTransportFueltypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_create_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_release_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_insert'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_iterator'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkTransportFueltypeToFfi(List<FuelType> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkTransportFueltypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportFueltypeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkTransportFueltypeInsert(_result, _elementHandle);
    sdkTransportFueltypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<FuelType> heresdkSearchCommonBindingslistofSdkTransportFueltypeFromFfi(Pointer<Void> handle) {
  final result = List<FuelType>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkTransportFueltypeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportFueltypeFromFfi(_elementHandle));
    } finally {
      sdkTransportFueltypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkTransportFueltypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkTransportFueltypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkTransportFueltypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_FuelType_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkTransportFueltypeToFfiNullable(List<FuelType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkTransportFueltypeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkTransportFueltypeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseFfiHandle(_handle);
  return result;
}

List<FuelType>? heresdkSearchCommonBindingslistofSdkTransportFueltypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkTransportFueltypeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkTransportFueltypeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkTransportFueltypeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_create_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_release_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_insert'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_iterator'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeToFfi(List<TruckFuelType> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportTruckfueltypeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeInsert(_result, _elementHandle);
    sdkTransportTruckfueltypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckFuelType> heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeFromFfi(Pointer<Void> handle) {
  final result = List<TruckFuelType>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportTruckfueltypeFromFfi(_elementHandle));
    } finally {
      sdkTransportTruckfueltypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_transport_TruckFuelType_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeToFfiNullable(List<TruckFuelType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseFfiHandle(_handle);
  return result;
}

List<TruckFuelType>? heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkTransportTruckfueltypeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

























final _heresdkTrafficBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_create_handle'));
final _heresdkTrafficBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_release_handle'));
final _heresdkTrafficBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_insert'));
final _heresdkTrafficBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator'));
final _heresdkTrafficBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_release_handle'));
final _heresdkTrafficBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_is_valid'));
final _heresdkTrafficBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_increment'));
final _heresdkTrafficBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkTrafficBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkTrafficBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkTrafficBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofIntIterator(handle);
  while (_heresdkTrafficBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkTrafficBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofIntReleaseHandle(handle);

final _heresdkTrafficBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_create_handle_nullable'));
final _heresdkTrafficBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_release_handle_nullable'));
final _heresdkTrafficBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofIntToFfi(value);
  final result = _heresdkTrafficBindingslistofIntCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkTrafficBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofIntGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofIntFromFfi(_handle);
  heresdkTrafficBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofIntReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_create_handle'));
final _heresdkTrafficBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_release_handle'));
final _heresdkTrafficBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_insert'));
final _heresdkTrafficBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator'));
final _heresdkTrafficBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkTrafficBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkTrafficBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_increment'));
final _heresdkTrafficBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkTrafficBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkTrafficBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkTrafficBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofLocaleIterator(handle);
  while (_heresdkTrafficBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofLocaleReleaseHandle(handle);

final _heresdkTrafficBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkTrafficBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkTrafficBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofLocaleToFfi(value);
  final result = _heresdkTrafficBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkTrafficBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofLocaleFromFfi(_handle);
  heresdkTrafficBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofHeresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkTrafficBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkTrafficBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreGeopolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_insert'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_iterator'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeopolylineToFfi(List<GeoPolyline> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreGeopolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolylineToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreGeopolylineInsert(_result, _elementHandle);
    sdkCoreGeopolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolyline> heresdkTrafficBindingslistofSdkCoreGeopolylineFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreGeopolylineIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolylineFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreGeopolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreGeopolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeopolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoPolyline_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeopolylineToFfiNullable(List<GeoPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreGeopolylineToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreGeopolylineCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolyline>? heresdkTrafficBindingslistofSdkCoreGeopolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreGeopolylineGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreGeopolylineFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreGeopolylineReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkTrafficBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkTrafficBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkTrafficBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkTrafficBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkTrafficBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkTrafficBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficflowCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficflowToFfi(List<TrafficFlow> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficflowCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficflowToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficflowInsert(_result, _elementHandle);
    sdkTrafficTrafficflowReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficFlow> heresdkTrafficBindingslistofSdkTrafficTrafficflowFromFfi(Pointer<Void> handle) {
  final result = List<TrafficFlow>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficflowIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficflowFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficflowReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficflowIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficflowCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficflowGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficFlow_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficflowToFfiNullable(List<TrafficFlow>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficflowToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficflowCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseFfiHandle(_handle);
  return result;
}

List<TrafficFlow>? heresdkTrafficBindingslistofSdkTrafficTrafficflowFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficflowGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficflowFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficflowReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentToFfi(List<TrafficIncident> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidentToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentInsert(_result, _elementHandle);
    sdkTrafficTrafficincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncident> heresdkTrafficBindingslistofSdkTrafficTrafficincidentFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidentFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentToFfiNullable(List<TrafficIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficincidentToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncident>? heresdkTrafficBindingslistofSdkTrafficTrafficincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficincidentFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactToFfi(List<TrafficIncidentImpact> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidentimpactToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactInsert(_result, _elementHandle);
    sdkTrafficTrafficincidentimpactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentImpact> heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentImpact>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidentimpactFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidentimpactReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactToFfiNullable(List<TrafficIncidentImpact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentImpact>? heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeToFfi(List<TrafficIncidentType> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidenttypeToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeInsert(_result, _elementHandle);
    sdkTrafficTrafficincidenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentType> heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentType>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidenttypeFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidenttypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeToFfiNullable(List<TrafficIncidentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentType>? heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkTrafficBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkTrafficBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkTrafficBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkTrafficBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_create_handle'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_release_handle'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_put'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_release_handle'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_is_valid'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_increment'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_get_key'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_get_value'));

Pointer<Void> heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionToFfi(Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction> value) {
  final _result = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkTrafficTrafficincidentRestrictedvehiclecategoryToFfi(entry.key);
    final _valueHandle = sdkTrafficTrafficincidentVehiclerestrictionToFfi(entry.value);
    _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionPut(_result, _keyHandle, _valueHandle);
    sdkTrafficTrafficincidentRestrictedvehiclecategoryReleaseFfiHandle(_keyHandle);
    sdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction> heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionFromFfi(Pointer<Void> handle) {
  final result = Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction>();
  final _iteratorHandle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIterator(handle);
  while (_heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetValue(_iteratorHandle);
    try {
      result[sdkTrafficTrafficincidentRestrictedvehiclecategoryFromFfi(_keyHandle)] =
        sdkTrafficTrafficincidentVehiclerestrictionFromFfi(_valueHandle);
    } finally {
      sdkTrafficTrafficincidentRestrictedvehiclecategoryReleaseFfiHandle(_keyHandle);
      sdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandle(handle);

final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_create_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_release_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionToFfiNullable(Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionToFfi(value);
  final result = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandleNullable(_handle);
  heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_handle);
  return result;
}

Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction>? heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionGetValueNullable(handle);
  final result = heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionFromFfi(_handle);
  heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandleNullable(handle);

final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


// Copyright (c) 2018-2025 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//




















final _heresdkTrafficCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_create_handle'));
final _heresdkTrafficCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_release_handle'));
final _heresdkTrafficCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_insert'));
final _heresdkTrafficCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkTrafficCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkTrafficCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkTrafficCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofLocaleIterator(handle);
  while (_heresdkTrafficCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkTrafficCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofLocaleFromFfi(_handle);
  heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<List<GeoCoordinates>> value) {
  final _result = _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<List<GeoCoordinates>> heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<List<GeoCoordinates>>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<List<GeoCoordinates>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<List<GeoCoordinates>>? heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofHeresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkTrafficCommonBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkTrafficCommonBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointToFfi(List<NetworkEndpoint> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreNetworkendpointToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointInsert(_result, _elementHandle);
    sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<NetworkEndpoint> heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointFromFfi(Pointer<Void> handle) {
  final result = List<NetworkEndpoint>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreNetworkendpointFromFfi(_elementHandle));
    } finally {
      sdkCoreNetworkendpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_NetworkEndpoint_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointToFfiNullable(List<NetworkEndpoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

List<NetworkEndpoint>? heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreNetworkendpointReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(List<CatalogConfiguration> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineCatalogconfigurationToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationInsert(_result, _elementHandle);
    sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CatalogConfiguration> heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(Pointer<Void> handle) {
  final result = List<CatalogConfiguration>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineCatalogconfigurationFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineCatalogconfigurationReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_CatalogConfiguration_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfiNullable(List<CatalogConfiguration>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

List<CatalogConfiguration>? heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreEngineCatalogconfigurationReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsToFfi(List<UsageStats> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStats> heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStats>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsToFfiNullable(List<UsageStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStats>? heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(List<UsageStatsNetworkStats> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineUsagestatsNetworkstatsToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsInsert(_result, _elementHandle);
    sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<UsageStatsNetworkStats> heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(Pointer<Void> handle) {
  final result = List<UsageStatsNetworkStats>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineUsagestatsNetworkstatsFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_UsageStats_NetworkStats_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfiNullable(List<UsageStatsNetworkStats>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

List<UsageStatsNetworkStats>? heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreEngineUsagestatsNetworkstatsReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_insert'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(List<LocalizedRoadNumber> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingLocalizedroadnumberToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberInsert(_result, _elementHandle);
    sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedRoadNumber> heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedRoadNumber>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingLocalizedroadnumberFromFfi(_elementHandle));
    } finally {
      sdkRoutingLocalizedroadnumberReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_routing_LocalizedRoadNumber_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberToFfiNullable(List<LocalizedRoadNumber>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedRoadNumber>? heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkRoutingLocalizedroadnumberReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_put'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_release_handle'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_is_valid'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_increment'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_key'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_iterator_get_value'));

Pointer<Void> heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(Map<EngineBaseURL, EngineOptions> value) {
  final _result = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = sdkCoreEngineEngineoptionsToFfi(entry.value);
    _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, EngineOptions> heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, EngineOptions>();
  final _iteratorHandle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIterator(handle);
  while (_heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        sdkCoreEngineEngineoptionsFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      sdkCoreEngineEngineoptionsReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandle(handle);

final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_create_handle_nullable'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_release_handle_nullable'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_sdk_core_engine_EngineOptions_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfiNullable(Map<EngineBaseURL, EngineOptions>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsToFfi(value);
  final result = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, EngineOptions>? heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsFromFfi(_handle);
  heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToSdkCoreEngineEngineoptionsReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_insert'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_release_handle'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_is_valid'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_increment'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(Set<PassThroughFeature> value) {
  final _result = _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEnginePassthroughfeatureToFfi(element);
    _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureInsert(_result, _elementHandle);
    sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

Set<PassThroughFeature> heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(Pointer<Void> handle) {
  final result = Set<PassThroughFeature>();
  final _iteratorHandle = _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIterator(handle);
  while (_heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEnginePassthroughfeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEnginePassthroughfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandle(handle);

final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_create_handle_nullable'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_release_handle_nullable'));
final _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsSetOf_sdk_core_engine_PassThroughFeature_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfiNullable(Set<PassThroughFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureToFfi(value);
  final result = _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

Set<PassThroughFeature>? heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureFromFfi(_handle);
  heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingssetofSdkCoreEnginePassthroughfeatureReleaseHandleNullable(handle);


